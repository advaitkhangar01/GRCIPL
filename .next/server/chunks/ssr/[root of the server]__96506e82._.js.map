{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,kKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sidebar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft, X } from \"lucide-react\" // Import X for close button\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent, SheetClose } from \"@/components/ui/sheet\" // Import SheetClose\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\" // Default desktop width\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\" // Mobile sheet width\nconst SIDEBAR_WIDTH_ICON = \"3.5rem\" // Desktop collapsed width (icon only)\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // --- Cookie Logic ---\n    const getCookie = (name: string): boolean | undefined => {\n        if (typeof document === 'undefined') return undefined; // Check if document exists (for SSR)\n        const value = `; ${document.cookie}`;\n        const parts = value.split(`; ${name}=`);\n        if (parts.length === 2) {\n            const cookieValue = parts.pop()?.split(';').shift();\n            return cookieValue === 'true'; // Return boolean based on cookie value\n        }\n        return undefined; // Return undefined if cookie not found\n    };\n\n    const initialOpenState = getCookie(SIDEBAR_COOKIE_NAME) ?? defaultOpen;\n    // --------------------\n\n\n    const [_open, _setOpen] = React.useState(initialOpenState) // Use initial state from cookie or default\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n         if (typeof document !== 'undefined') { // Check if document exists\n             document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n         }\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n       if (typeof window === 'undefined') return; // Skip effect on server\n\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full\",\n              // Removed inset styling, handle within AppLayout if needed\n              // \"has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\" // Side for mobile Sheet\n    // Removed unused variant and collapsible props\n  }\n>(\n  (\n    {\n      side = \"left\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile, open } = useSidebar() // Get 'open' state\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground\" // Removed [&>button]:hidden as SheetClose is explicit\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n            {/* Explicit Close Button for Mobile Sheet */}\n            <SheetClose className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-sidebar-accent data-[state=open]:text-muted-foreground\">\n              <X className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Close</span>\n            </SheetClose>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    // Desktop Sidebar Logic\n    return (\n      <div\n        ref={ref}\n        data-sidebar=\"sidebar\"\n        data-state={state}\n        className={cn(\n          \"hidden md:flex flex-col h-screen\", // Use flex-col and h-screen\n          \"transition-[width] duration-200 ease-in-out\", // Smooth width transition\n          open ? \"w-[var(--sidebar-width)]\" : \"w-[var(--sidebar-width-icon)]\",\n          \"bg-sidebar text-sidebar-foreground border-r border-sidebar-border\", // Apply background and border\n          className\n        )}\n        {...props}\n      >\n          {children}\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar, isMobile } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\n          \"h-8 w-8\", // Slightly smaller trigger\n          isMobile ? \"flex\" : \"md:hidden\", // Show on mobile, hide above md breakpoint\n          className\n          )}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\n\n// SidebarRail component removed as it's not commonly used with this pattern\n\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  const { open } = useSidebar() // Access sidebar state\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        // Adjusted margin based on sidebar state (no margin when collapsed)\n        // \"md:ml-[var(--sidebar-width)] group-data-[state=collapsed]/sidebar-wrapper:md:ml-[var(--sidebar-width-icon)]\",\n        // Apply margin directly based on 'open' state for simplicity\n        // No left margin needed if sidebar is positioned absolutely or fixed\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n   const { state } = useSidebar();\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n         // Hide input when collapsed\n         state === \"collapsed\" && \"hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n   const { state } = useSidebar();\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\n        \"flex flex-col gap-2 p-3\", // Adjusted padding\n         // Center items when collapsed\n         state === \"collapsed\" && \"items-center px-2\",\n        className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n   const { state } = useSidebar();\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\n        \"flex flex-col gap-2 p-3 mt-auto\", // Added mt-auto, adjusted padding\n         // Center items when collapsed\n         state === \"collapsed\" && \"items-center px-2\",\n        className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 my-1 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-1 overflow-y-auto overflow-x-hidden p-0\", // Adjusted padding and gap\n        // Remove group-data selector, rely on direct state\n        // \"group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n   const { state } = useSidebar();\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\n        \"relative flex w-full min-w-0 flex-col p-2\",\n         // Remove padding when collapsed to align icons centrally\n         state === \"collapsed\" && \"px-0 items-center\",\n         className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n  const { state } = useSidebar();\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-opacity duration-200 ease-linear\", // Use opacity transition\n         // Hide label when collapsed\n         state === \"collapsed\" ? \"opacity-0 h-0 pointer-events-none\" : \"opacity-100\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  const { state } = useSidebar();\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-opacity hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        // Hide action when collapsed\n        state === \"collapsed\" && \"hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-0.5\", className)} // Reduced gap\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-colors hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[state=collapsed]/sidebar-wrapper:justify-center group-data-[state=collapsed]/sidebar-wrapper:size-9 group-data-[state=collapsed]/sidebar-wrapper:p-0 group-data-[state=collapsed]/sidebar-wrapper:[&>span:last-child]:hidden group-data-[state=collapsed]/sidebar-wrapper:[&>svg]:size-5 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-9 text-sm\", // Adjusted height\n        sm: \"h-8 text-xs\", // Adjusted height\n        lg: \"h-11 text-sm group-data-[state=collapsed]/sidebar-wrapper:!size-10 group-data-[state=collapsed]/sidebar-wrapper:!p-0\", // Adjusted height\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      children, // Accept children\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      >\n          {children}\n      </Comp>\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        {/* Conditionally render tooltip only when collapsed and not mobile */}\n        {state === \"collapsed\" && !isMobile && (\n            <TooltipContent\n              side=\"right\"\n              align=\"center\"\n              {...tooltip}\n             />\n        )}\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  const { state } = useSidebar();\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1/2 -translate-y-1/2 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        // Hide action when collapsed\n        state === \"collapsed\" && \"hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n    const { state } = useSidebar();\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"absolute right-1 top-1/2 -translate-y-1/2 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        // Hide badge when collapsed\n        state === \"collapsed\" && \"hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = true, ...props }, ref) => { // Default showIcon to true\n  const { state } = useSidebar();\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\n          \"rounded-md h-9 flex gap-2 px-2 items-center\", // Match button height\n          state === \"collapsed\" && \"size-9 p-0 justify-center\", // Adjust for collapsed state\n          className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className={cn(\n              \"size-4 rounded-md\",\n               state === \"collapsed\" && \"size-5\", // Slightly larger icon when collapsed\n              )}\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      {state === \"expanded\" && ( // Only show text skeleton when expanded\n          <Skeleton\n            className=\"h-4 flex-1 max-w-[70%]\" // Fixed width skeleton text\n            data-sidebar=\"menu-skeleton-text\"\n          />\n      )}\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\n\n// SidebarMenuSub components are less commonly used with this simplified pattern,\n// but kept here for potential future use or complex menus.\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => {\n   const { state } = useSidebar();\n  return(\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-0.5 border-l border-sidebar-border pl-2.5 py-0.5\", // Adjusted padding/margin\n      // Hide sub-menu when collapsed\n      state === \"collapsed\" && \"hidden\",\n      className\n    )}\n    {...props}\n  />\n)})\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n  const { state } = useSidebar();\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-8 min-w-0 items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\", // Default size md\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"h-7 text-xs\", // Apply sm size\n        // Hide sub-button when collapsed\n        state === \"collapsed\" && \"hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  // SidebarRail, // Removed\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/app-layout.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  SidebarProvider,\n  Sidebar,\n  SidebarHeader,\n  SidebarContent,\n  SidebarFooter,\n  SidebarTrigger,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuItem,\n  SidebarMenuButton,\n  SidebarMenuSub,\n  SidebarMenuSubItem,\n  SidebarMenuSubButton,\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarGroupContent, // Added import\n  SidebarSeparator,\n} from \"@/components/ui/sidebar\";\nimport { Home, Users, Briefcase, CheckCircle, Star, LogOut, Upload, UserPlus, Filter, FileText, BarChart, History, CalendarClock, Menu } from \"lucide-react\"; // Added BarChart, History, CalendarClock, Menu\nimport Link from \"next/link\";\nimport { Button } from \"@/components/ui/button\";\nimport { useRouter, usePathname } from 'next/navigation';\n\ninterface AppLayoutProps {\n  children: React.ReactNode;\n  userRole: \"admin\" | \"employee\"; // Define user roles\n}\n\nconst AdminSidebar = () => {\n  const pathname = usePathname();\n  const isActive = (path: string) => pathname === path;\n\n  return (\n    <>\n      <SidebarGroup>\n        <SidebarGroupLabel>Management</SidebarGroupLabel>\n        <SidebarGroupContent>\n          <SidebarMenu>\n            <SidebarMenuItem>\n              <Link href=\"/admin/dashboard\" passHref>\n                <SidebarMenuButton isActive={isActive('/admin/dashboard')} tooltip=\"View All Leads\">\n                  <Home />\n                  <span>All Leads</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n            <SidebarMenuItem>\n              <Link href=\"/admin/assign\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/assign')} tooltip=\"Assign Leads\">\n                  <UserPlus />\n                  <span>Assign Leads</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n             <SidebarMenuItem>\n              <Link href=\"/admin/upload\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/upload')} tooltip=\"Upload Leads\">\n                  <Upload />\n                  <span>Upload Leads</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n             <SidebarMenuItem>\n              <Link href=\"/admin/upload-history\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/upload-history')} tooltip=\"View Upload History\">\n                  <History />\n                  <span>Upload History</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroupContent>\n      </SidebarGroup>\n      <SidebarSeparator />\n       <SidebarGroup>\n        <SidebarGroupLabel>Special Views</SidebarGroupLabel>\n        <SidebarGroupContent>\n          <SidebarMenu>\n            <SidebarMenuItem>\n              <Link href=\"/admin/prospects\" passHref>\n                <SidebarMenuButton isActive={isActive('/admin/prospects')} tooltip=\"View Prospects\">\n                  <Star />\n                  <span>Prospects</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n            <SidebarMenuItem>\n              <Link href=\"/admin/won\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/won')} tooltip=\"View Won Leads\">\n                  <CheckCircle />\n                  <span>Won by GRC</span>\n                </SidebarMenuButton>\n              </Link>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroupContent>\n      </SidebarGroup>\n       <SidebarSeparator />\n       <SidebarGroup>\n        <SidebarGroupLabel>Analysis & Records</SidebarGroupLabel> {/* Updated Label */}\n        <SidebarGroupContent>\n          <SidebarMenu>\n             <SidebarMenuItem>\n               <Link href=\"/admin/reports\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/reports')} tooltip=\"Generate Reports\">\n                   <FileText />\n                   <span>Reports</span>\n                 </SidebarMenuButton>\n               </Link>\n             </SidebarMenuItem>\n              <SidebarMenuItem>\n               <Link href=\"/admin/analytics\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/analytics')} tooltip=\"View Analytics\">\n                   <BarChart />\n                   <span>Analytics</span>\n                 </SidebarMenuButton>\n               </Link>\n             </SidebarMenuItem>\n             <SidebarMenuItem>\n               <Link href=\"/admin/attendance\" passHref>\n                 <SidebarMenuButton isActive={isActive('/admin/attendance')} tooltip=\"View Attendance\">\n                   <CalendarClock />\n                   <span>Attendance</span>\n                 </SidebarMenuButton>\n               </Link>\n             </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroupContent>\n      </SidebarGroup>\n    </>\n  );\n};\n\nconst EmployeeSidebar = () => {\n   const pathname = usePathname();\n   const isActive = (path: string) => pathname === path;\n\n  return (\n    <>\n      <SidebarGroup>\n        <SidebarGroupLabel>My Work</SidebarGroupLabel> {/* Updated Label */}\n        <SidebarGroupContent>\n          <SidebarMenu>\n            <SidebarMenuItem>\n               <Link href=\"/employee/dashboard\" passHref>\n                  <SidebarMenuButton isActive={isActive('/employee/dashboard')} tooltip=\"My Assigned Leads\">\n                    <Briefcase />\n                    <span>My Leads</span>\n                  </SidebarMenuButton>\n                </Link>\n            </SidebarMenuItem>\n            <SidebarMenuItem>\n               <Link href=\"/employee/attendance\" passHref>\n                  <SidebarMenuButton isActive={isActive('/employee/attendance')} tooltip=\"Mark Attendance\">\n                    <CalendarClock />\n                    <span>My Attendance</span>\n                  </SidebarMenuButton>\n                </Link>\n            </SidebarMenuItem>\n          </SidebarMenu>\n        </SidebarGroupContent>\n      </SidebarGroup>\n    </>\n  );\n};\n\n\nexport function AppLayout({ children, userRole }: AppLayoutProps) {\n  const router = useRouter();\n\n  const handleLogout = () => {\n    // Clear authentication state (e.g., remove token from localStorage)\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('userId'); // Also remove userId\n    // Redirect to login page\n    router.push('/login');\n  };\n\n  // Determine sidebar content based on user role\n  const sidebarContent = userRole === \"admin\" ? <AdminSidebar /> : <EmployeeSidebar />;\n\n  return (\n    <SidebarProvider defaultOpen={true}>\n      {/* Pass side prop for mobile sheet */}\n      <Sidebar side=\"left\">\n        <SidebarHeader className=\"p-4 border-b border-sidebar-border\">\n          {/* Adjusted text size and wrapping for smaller screens */}\n          <h1 className=\"text-lg sm:text-xl font-semibold text-sidebar-primary-foreground leading-tight\">Gaea Realty</h1>\n          <span className=\"text-xs sm:text-sm text-sidebar-foreground/80 capitalize mt-1\">{userRole} Dashboard</span>\n        </SidebarHeader>\n        <SidebarContent className=\"flex-1 overflow-y-auto p-0\">\n          {sidebarContent}\n        </SidebarContent>\n        <SidebarFooter className=\"p-2 sm:p-4 border-t border-sidebar-border\"> {/* Adjusted padding */}\n          <Button variant=\"ghost\" className=\"w-full justify-start text-sidebar-foreground hover:bg-sidebar-accent\" onClick={handleLogout}>\n            <LogOut className=\"mr-2 h-4 w-4\" />\n            Logout\n          </Button>\n        </SidebarFooter>\n      </Sidebar>\n       {/* Main content area */}\n      <SidebarInset className=\"bg-background\">\n         {/* Header within the main content area */}\n         {/* Changed sticky behavior and layout for responsiveness */}\n        <header className=\"flex h-14 items-center justify-between gap-4 border-b bg-card px-4 md:px-6 md:static md:h-auto md:border-0 md:bg-transparent\">\n           {/* Trigger moved to the left */}\n           <SidebarTrigger className=\"md:hidden\" /> {/* Show trigger only below md breakpoint */}\n\n           {/* Placeholder for potential header actions like search or user profile */}\n           {/* Example: User Profile dropdown */}\n           {/* <div className=\"ml-auto flex items-center gap-4\"> */}\n             {/* Add user profile/settings dropdown here if needed */}\n           {/* </div> */}\n        </header>\n         {/* Adjusted padding for main content */}\n        <main className=\"flex-1 p-4 md:p-6\">{children}</main>\n      </SidebarInset>\n    </SidebarProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1737, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  // Removed the outer wrapper div\n  <table\n    ref={ref}\n    className={cn(\"w-full caption-bottom text-sm\", className)} // Removed border-collapse\n    {...props} />\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => ( // Explicitly accept children\n  <tr // Ensure no whitespace between this tag and its children\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}>{children}</tr> // Render children explicitly inside the tags, no whitespace\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-3 py-2 text-left align-middle font-semibold text-primary/80 [&:has([role=checkbox])]:pr-0 border-x border-primary/10 whitespace-nowrap\", // Added custom padding/styles back\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n        \"px-3 py-1.5 align-top [&:has([role=checkbox])]:pr-0 border-x border-primary/10 whitespace-nowrap\", // Added custom padding/styles back\n        className\n      )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,MAC1B,gCAAgC;kBAChC,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,KAAG,yDAAyD;;QAC3D,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBAAG;;;;;aAAe,4DAA4D;;AAE3F,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kJACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,oGACA;QAEH,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2042, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        booked: // Added booked variant\n            \"border-transparent bg-booked text-booked-foreground hover:bg-booked/80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,QACI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 2085, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,oKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8OAAC,oMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,oKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2471, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2598, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/leads/lead-table-columns.tsx"],"sourcesContent":["\n// @ts-nocheck\n// TODO: Fix typescript errors\n\"use client\";\n\nimport type { ColumnDef } from \"@tanstack/react-table\";\nimport type { Lead, CallStatus, CallOutcome, LeadStatus, LeadResult } from \"@/types/lead\"; // Import new types\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Button, buttonVariants } from \"@/components/ui/button\"; // Import buttonVariants\nimport { ArrowUpDown, MoreHorizontal, Edit, Trash2, Save, XCircle, Pencil, Loader2, Calendar as CalendarIcon } from \"lucide-react\"; // Added Loader2, CalendarIcon\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n  DropdownMenuCheckboxItem // Import Checkbox Item for Filtering\n} from \"@/components/ui/dropdown-menu\";\nimport { format, parseISO, isValid } from 'date-fns'; // For date formatting, add isValid\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\"; // Import AlertDialog components\n\n\n// Helper function to format date strings or return empty if null/invalid\nconst formatDate = (dateString: string | Date | null | undefined): string => {\n  if (!dateString) return \"\";\n  try {\n    // Handle both Date objects and ISO strings\n    const date = typeof dateString === 'string' ? parseISO(dateString) : dateString;\n    if (!isValid(date)) { // Check if the parsed date is valid\n        return \"Invalid Date\";\n    }\n    return format(date, 'PP'); // Format like 'Sep 15, 2024'\n  } catch (e) {\n    console.warn(\"Invalid Date for formatting:\", dateString, e);\n    return \"Invalid Date\";\n  }\n};\n\n// Define available options for filtering/editing (ensure null is handled distinctly)\nexport const callStatuses: Array<CallStatus> = [null, \"Connected\", \"Not Connected\"];\nexport const callOutcomes: Array<CallOutcome> = [null, \"Prospect\", \"Call Back\", \"Not Interested\", \"Ringing\", \"Call Disconnected\", \"Won by GRC\"];\nconst bookedLostOptions: Array<'Booked' | 'Lost' | null> = [null, \"Booked\", \"Lost\"];\nexport const leadStatuses: Array<LeadStatus> = [null, \"Hot\", \"Warm\", \"Cold\", \"Very Cold\", \"Lost\", \"Booked\"];\nexport const leadResults: Array<LeadResult> = [null, \"VDNB\", \"Visit Proposed\", \"Visit Confirmed\", \"Visit not Done\", \"Booked\"];\n\n\n// Interface for inline editing props passed down\ninterface InlineEditProps {\n  editingRowId: number | string | null;\n  editedRowData: Partial<Lead> | null;\n  handleInlineChange: (fieldName: keyof Lead, value: any) => void;\n  startInlineEdit: (rowId: number | string, initialData: Lead) => void;\n  saveInlineEdit: () => Promise<void>;\n  cancelInlineEdit: () => void;\n  isSavingInline: boolean; // Add saving state\n}\n\nexport const getColumns = (\n  isEditable: (field: keyof Lead) => boolean,\n  onEditDialog: (lead: Lead) => void, // Renamed to avoid clash\n  onDelete?: (leadId: number | string) => void, // Optional delete handler for Admin\n  inlineEditProps?: InlineEditProps // Optional inline editing props\n): ColumnDef<Lead>[] => {\n\n  const {\n    editingRowId = null,\n    editedRowData = null,\n    handleInlineChange = () => {},\n    startInlineEdit = () => {},\n    saveInlineEdit = async () => {},\n    cancelInlineEdit = () => {},\n    isSavingInline = false, // Default saving state\n  } = inlineEditProps || {};\n\n  const renderSelectCell = (accessorKey: keyof Lead, options: (string | null)[], placeholder: string) => ({ row }) => {\n    const lead = row.original;\n    const isEditing = lead.id === editingRowId;\n    const canEditField = isEditable(accessorKey);\n\n    if (isEditing && canEditField) {\n      return (\n        <Select\n          value={editedRowData?.[accessorKey] ?? \"__NULL__\"}\n          onValueChange={(value) => handleInlineChange(accessorKey, value === '__NULL__' ? null : value)}\n          disabled={isSavingInline}\n        >\n          <SelectTrigger className={cn(\n             \"w-full\", // Use full width to respect cell padding\n             // Apply red text color if the outcome is Prospect or status is Hot\n             ((accessorKey === 'callOutcome' && editedRowData?.['callOutcome'] === 'Prospect') || (accessorKey === 'leadStatus' && editedRowData?.['leadStatus'] === 'Hot')) && \"text-prospect\"\n          )}>\n            <SelectValue placeholder={placeholder} />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"__NULL__\">-- Clear --</SelectItem>\n            {options.filter(opt => opt !== null).map((opt) => (\n              <SelectItem key={opt!} value={opt!} className={cn((opt === 'Prospect' || opt === 'Hot') && \"text-prospect\")}>\n                {opt}\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n      );\n    }\n    const value = row.getValue(accessorKey);\n    // Apply red text color if the outcome is Prospect or status is Hot\n    const isHotOrProspect = (accessorKey === 'callOutcome' && value === 'Prospect') || (accessorKey === 'leadStatus' && value === 'Hot');\n    return <div className={cn(isHotOrProspect && \"text-prospect font-medium\")}>{value || \"-\"}</div>; // Display '-' if null/empty\n  };\n\n  const renderDateCell = (accessorKey: keyof Lead) => ({ row }) => {\n    const lead = row.original;\n    const isEditing = lead.id === editingRowId;\n    const canEditField = isEditable(accessorKey);\n\n    if (isEditing && canEditField) {\n      // Ensure the value passed to Calendar's selected prop is a Date object or undefined\n      const selectedDate = editedRowData?.[accessorKey] ? new Date(editedRowData[accessorKey] as string | Date) : undefined;\n      const displayValue = selectedDate ? format(selectedDate, \"PPP\") : <span>Pick date</span>;\n\n\n      return (\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button\n              variant={\"outline\"}\n              size=\"sm\" // Keep size small if desired\n              className={cn(\n                \"w-full justify-start text-left font-normal\", // Use full width\n                !editedRowData?.[accessorKey] && \"text-muted-foreground\"\n              )}\n              disabled={isSavingInline}\n            >\n              <CalendarIcon className=\"mr-1 h-3 w-3\" />\n              {displayValue}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-auto p-0\">\n            <Calendar\n              mode=\"single\"\n              selected={selectedDate} // Pass Date object or undefined\n              onSelect={(date) => handleInlineChange(accessorKey, date)} // date is Date object or undefined\n              initialFocus\n            />\n          </PopoverContent>\n        </Popover>\n      );\n    }\n    const displayDate = formatDate(row.getValue(accessorKey));\n    return <div>{displayDate || \"-\"}</div>; // Show dash if no date or invalid\n  };\n\n\n const renderBookedLostBadge = (callDateKey: keyof Lead, bookedLostKey: keyof Lead) => ({ row }) => {\n      const displayDate = formatDate(row.getValue(callDateKey));\n      const bookedLostStatus = row.original[bookedLostKey];\n      return (\n        <div>\n          {displayDate || \"-\"}\n          {bookedLostStatus && (\n             <Badge\n               variant={bookedLostStatus === 'Booked' ? 'booked' : 'secondary'}\n               className=\"ml-2 whitespace-nowrap\"\n             >\n              {bookedLostStatus}\n             </Badge>\n          )}\n        </div>\n      );\n  };\n\n\n  const columns: ColumnDef<Lead>[] = [\n    // Keep select column if needed for bulk actions, otherwise remove/hide\n    {\n      id: \"select\",\n      header: ({ table }) => (\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && \"indeterminate\")\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n          className=\"translate-y-[2px]\"\n           disabled={isSavingInline || !!editingRowId} // Disable if editing any row\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n          className=\"translate-y-[2px]\"\n          disabled={isSavingInline || row.id === editingRowId} // Disable checkbox while inline saving this row\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n        accessorKey: \"id\", // Use the Opportunity ID\n        header: ({ column }) => (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n            disabled={isSavingInline}\n          >\n            Opp. ID\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        ),\n        cell: ({ row }) => <div className=\"text-xs\">{row.getValue(\"id\")}</div>,\n        enableHiding: true, // Allow hiding Opp ID\n    },\n    {\n      accessorKey: \"name\",\n      header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          disabled={isSavingInline} // Disable sorting while saving\n        >\n          Client Name\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: ({ row }) => <div className=\"font-medium\">{row.getValue(\"name\")}</div>,\n      enableHiding: false, // Usually want name visible\n    },\n    {\n      accessorKey: \"phone\",\n      header: \"Mobile Number\",\n      cell: ({ row }) => <div>{row.getValue(\"phone\")}</div>,\n    },\n     {\n      accessorKey: \"assignedTo\",\n       header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Calling SM\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: ({ row }) => <div>{row.getValue(\"assignedTo\") || \"Unassigned\"}</div>,\n      enableHiding: false, // Always show Assigned To\n        filterFn: (row, id, value) => {\n             if (!value || value.length === 0) return true;\n             const assignedTo = row.getValue(id) || \"Unassigned\"; // Handle null/undefined\n            return value.includes(assignedTo);\n        }\n    },\n     {\n      accessorKey: \"source\",\n       header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Source\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: ({ row }) => <div>{row.getValue(\"source\") || \"-\"}</div>,\n      enableHiding: true, // Allow hiding source column\n       filterFn: (row, id, value) => {\n         if (!value || value.length === 0) return true;\n         const sourceVal = row.getValue(id) || \"Unknown\"; // Treat null/empty as \"Unknown\" for filtering\n         return value.includes(sourceVal);\n       }\n    },\n    // --- Inline Editable Columns ---\n    {\n      accessorKey: \"callDate\",\n       header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Call Dt / Status\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: renderBookedLostBadge(\"callDate\", \"callBookedLost\"),\n      sortingFn: 'datetime',\n    },\n     {\n      accessorKey: \"callBookedLost\", // Hidden column for data, shown with callDate\n      header: () => null,\n      cell: () => null,\n       enableHiding: true, // Typically hidden\n    },\n    {\n      accessorKey: \"callStatus\",\n      header: \"Call Status\",\n      cell: renderSelectCell(\"callStatus\", callStatuses, \"Call Status\"),\n      filterFn: (row, id, value) => {\n         if (!value || value.length === 0) return true;\n         const status = row.getValue(id) ?? \"__NULL__\"; // Handle null\n         return value.includes(status);\n      }\n    },\n    {\n      accessorKey: \"callOutcome\",\n      header: \"Call Outcome\",\n      cell: renderSelectCell(\"callOutcome\", callOutcomes, \"Call Outcome\"),\n      filterFn: (row, id, value) => {\n         if (!value || value.length === 0) return true;\n         const outcome = row.getValue(id) ?? \"__NULL__\"; // Handle null\n         return value.includes(outcome);\n      }\n    },\n     {\n      accessorKey: \"nadDate\",\n       header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          NAD / Status\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: renderBookedLostBadge(\"nadDate\", \"nadBookedLost\"),\n      sortingFn: 'datetime',\n    },\n     {\n      accessorKey: \"nadBookedLost\", // Hidden column for data, shown with nadDate\n      header: () => null,\n      cell: () => null,\n       enableHiding: true, // Typically hidden\n    },\n    {\n        accessorKey: \"leadStatus\", // New Column\n        header: \"Lead Status\",\n        cell: renderSelectCell(\"leadStatus\", leadStatuses, \"Lead Status\"),\n        filterFn: (row, id, value) => {\n            if (!value || value.length === 0) return true;\n            const status = row.getValue(id) ?? \"__NULL__\"; // Handle null\n            return value.includes(status);\n        }\n    },\n    {\n        accessorKey: \"leadResult\", // New Column\n        header: \"Lead Result\",\n        cell: renderSelectCell(\"leadResult\", leadResults, \"Lead Result\"),\n        filterFn: (row, id, value) => {\n            if (!value || value.length === 0) return true;\n            const result = row.getValue(id) ?? \"__NULL__\"; // Handle null\n            return value.includes(result);\n        }\n    },\n    {\n      accessorKey: \"remark\",\n      header: \"Remark\",\n       cell: ({ row }) => {\n         const lead = row.original;\n         const isEditing = lead.id === editingRowId;\n         const canEditField = isEditable(\"remark\");\n\n         if (isEditing && canEditField) {\n           return (\n             <Textarea\n               value={editedRowData?.remark ?? \"\"}\n               onChange={(e) => handleInlineChange(\"remark\", e.target.value)}\n               rows={1} // Start with single row\n               className=\"w-full\" // Use full width\n               disabled={isSavingInline}\n             />\n           );\n         }\n        return (\n        <div className=\"truncate max-w-[200px]\">{row.getValue(\"remark\") || \"-\"}</div> // Restore truncation for display\n        );\n      },\n    },\n    // --- End Inline Editable Columns ---\n     {\n      accessorKey: \"location\",\n       header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Location\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n       cell: ({ row }) => {\n         const lead = row.original;\n         const isEditing = lead.id === editingRowId;\n         const canEditField = isEditable(\"location\");\n\n         if (isEditing && canEditField) {\n           return (\n             <Input\n               value={editedRowData?.location ?? \"\"}\n               onChange={(e) => handleInlineChange(\"location\", e.target.value)}\n               className=\"w-full\" // Use full width\n               disabled={isSavingInline}\n             />\n           );\n         }\n        return <div>{row.getValue(\"location\") || \"-\"}</div>;\n      },\n      enableHiding: true, // Allow hiding location\n    },\n    {\n      accessorKey: \"company\",\n      header: \"Company\",\n      cell: ({ row }) => <div>{row.getValue(\"company\") || \"-\"}</div>,\n      enableHiding: true, // Allow hiding company\n    },\n     {\n      accessorKey: \"lastUpdated\",\n      header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Last Updated\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: ({ row }) => <div className=\"text-xs\">{formatDate(row.getValue(\"lastUpdated\"))}</div>,\n       sortingFn: 'datetime',\n       enableHiding: true, // Might hide by default\n    },\n     {\n      accessorKey: \"uploadDate\",\n      header: ({ column }) => (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n           disabled={isSavingInline}\n        >\n          Upload Date\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      ),\n      cell: ({ row }) => <div className=\"text-xs\">{formatDate(row.getValue(\"uploadDate\"))}</div>,\n       sortingFn: 'datetime',\n       enableHiding: true, // Might hide by default\n    },\n    {\n      id: \"actions\",\n      cell: ({ row }) => {\n        const lead = row.original;\n        const isEditingThisRow = lead.id === editingRowId;\n        const canEditAnyInline = [\n            \"callDate\", \"callStatus\", \"callOutcome\", \"callBookedLost\",\n            \"nadDate\", \"nadBookedLost\", \"remark\", \"location\",\n            \"leadStatus\", \"leadResult\" // Add new fields here\n        ].some(f => isEditable(f as keyof Lead));\n\n        if (isEditingThisRow && inlineEditProps) {\n            return (\n                <div className=\"flex items-center space-x-1\">\n                     <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 text-green-600 hover:text-green-700\" onClick={saveInlineEdit} title=\"Save Changes\" disabled={isSavingInline}>\n                       {isSavingInline ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Save className=\"h-4 w-4\" />}\n                    </Button>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 text-red-600 hover:text-red-700\" onClick={cancelInlineEdit} title=\"Cancel Edit\" disabled={isSavingInline}>\n                        <XCircle className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n            );\n        }\n\n        return (\n           <AlertDialog> {/* Wrap DropdownMenu and AlertDialogContent */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"h-8 w-8 p-0\" disabled={isSavingInline || !!editingRowId}> {/* Disable actions when any row is editing */}\n                    <span className=\"sr-only\">Open menu</span>\n                    <MoreHorizontal className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                  {inlineEditProps && canEditAnyInline && (\n                    <DropdownMenuItem onClick={() => startInlineEdit(lead.id, lead)} disabled={isSavingInline || !!editingRowId}>\n                        <Pencil className=\"mr-2 h-4 w-4\" />\n                        Edit Inline\n                    </DropdownMenuItem>\n                  )}\n                  <DropdownMenuItem onClick={() => onEditDialog(lead)} disabled={isSavingInline || !!editingRowId}>\n                       <Edit className=\"mr-2 h-4 w-4\" />\n                       Edit in Dialog\n                     </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => navigator.clipboard.writeText(lead.phone)} disabled={isSavingInline || !!editingRowId}>\n                    Copy Phone\n                  </DropdownMenuItem>\n                  {onDelete && ( // Conditionally render delete for admin\n                    <>\n                      <DropdownMenuSeparator />\n                       {/* Use AlertDialogTrigger inside DropdownMenuItem */}\n                       <AlertDialogTrigger asChild>\n                            <DropdownMenuItem\n                              className=\"text-destructive focus:text-destructive focus:bg-destructive/10\"\n                              onSelect={(e) => e.preventDefault()} // Prevent default closing on select\n                              disabled={isSavingInline || !!editingRowId}\n                            >\n                              <Trash2 className=\"mr-2 h-4 w-4\" />\n                              Delete Lead\n                            </DropdownMenuItem>\n                       </AlertDialogTrigger>\n                     </>\n                  )}\n                </DropdownMenuContent>\n              </DropdownMenu>\n               {/* Confirmation Dialog Content (placed outside DropdownMenu but inside the parent AlertDialog) */}\n               {onDelete && (\n                   <AlertDialogContent>\n                     <AlertDialogHeader>\n                       <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n                       <AlertDialogDescription>\n                         This action cannot be undone. This will permanently delete the lead\n                         \"{lead.name}\".\n                       </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                       <AlertDialogCancel>Cancel</AlertDialogCancel>\n                       <AlertDialogAction\n                           className={cn(buttonVariants({ variant: \"destructive\" }))}\n                           onClick={() => onDelete(lead.id)}\n                         >\n                           Delete\n                       </AlertDialogAction>\n                     </AlertDialogFooter>\n                   </AlertDialogContent>\n               )}\n           </AlertDialog>\n        );\n      },\n      enableSorting: false,\n      enableHiding: false,\n    },\n  ];\n\n  return columns;\n};\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3599, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/leads/lead-data-table.tsx"],"sourcesContent":["// @ts-nocheck\n// TODO: Fix typescript errors\n\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n  FilterFn, // Import FilterFn type\n} from \"@tanstack/react-table\";\nimport { rankItem } from '@tanstack/match-sorter-utils'; // Import for advanced filtering\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n  DropdownMenuLabel,\n  DropdownMenuSeparator\n} from \"@/components/ui/dropdown-menu\";\nimport { ChevronDown, Filter as FilterIcon } from \"lucide-react\";\nimport type { Lead, CallStatus, CallOutcome, LeadStatus, LeadResult } from \"@/types/lead\"; // Import new types\nimport { callStatuses, callOutcomes, leadStatuses, leadResults, getColumns } from './lead-table-columns'; // Import options and getColumns\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from \"@/lib/utils\"; // Import cn\nimport { generateMockLeads } from \"@/lib/mock-data\"; // Assuming mock data lives here\n\n// Declare module augmentation for react-table FilterFns\ndeclare module '@tanstack/react-table' {\n  interface FilterFns {\n    fuzzy: FilterFn<unknown>\n  }\n  interface FilterMeta {\n    itemRank: {passed: boolean} // Add itemRank to FilterMeta\n  }\n}\n\n\ninterface DataTableProps<TData extends Lead, TValue> {\n  data: TData[]; // Changed prop name from initialData to data\n  onEditDialog: (lead: TData) => void; // Callback for editing in dialog\n  onDelete?: (leadId: number | string) => void; // Optional callback for deleting (Admin)\n  onUpdate: (updatedLead: Partial<Lead>) => Promise<{ success: boolean }>; // Callback for saving updates\n  userRole: 'admin' | 'employee'; // Pass user role\n  availableEmployees?: string[]; // For admin filtering\n  rowSelection?: {}; // Add rowSelection prop\n  onRowSelectionChange?: (updater: any) => void; // Add handler prop\n}\n\n// Fuzzy filter function for global search\nconst fuzzyFilter: FilterFn<Lead> = (row, columnId, value, addMeta) => {\n    // Rank the item\n    const itemRank = rankItem(row.getValue(columnId), value);\n\n    // Store the itemRank info\n    addMeta({ itemRank });\n\n    // Return if the item should be filtered in/out\n    return itemRank.passed;\n};\n\n\nexport function LeadDataTable<TData extends Lead, TValue>({\n  data: initialData, // Rename prop back to initialData internally or use data directly\n  onEditDialog,\n  onDelete,\n  onUpdate,\n  userRole,\n  availableEmployees = [],\n  rowSelection = {},\n  onRowSelectionChange,\n}: Omit<DataTableProps<TData, TValue>, 'columns'>) { // Omit columns from props\n  const [data, setData] = React.useState<TData[]>(initialData || []); // Ensure initialData is an array\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  // Removed duplicate setColumnVisibility\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({\n     lastUpdated: false,\n     company: userRole === 'employee', // Hide for employee by default\n     source: true, // Show source by default\n     email: true,\n     assignedTo: userRole === 'employee' ? false : true, // Hide for employee\n     id: true, // Show Opp ID by default\n     uploadDate: false, // Hide upload date by default\n     location: true, // Show location\n     callBookedLost: true, // Hide helper columns\n     nadBookedLost: true,\n  });\n  const [globalFilter, setGlobalFilter] = React.useState('');\n  const { toast } = useToast();\n\n  // Inline Editing State\n  const [editingRowId, setEditingRowId] = React.useState<number | string | null>(null);\n  const [editedRowData, setEditedRowData] = React.useState<Partial<Lead> | null>(null);\n  const [isSavingInline, setIsSavingInline] = React.useState(false);\n\n   // Extract unique sources for filtering\n   const availableSources = React.useMemo(() => {\n      // Check if initialData is valid array before mapping\n      if (!Array.isArray(initialData)) {\n          console.warn(\"Initial data is not an array:\", initialData);\n          return [];\n      }\n      const sources = new Set(initialData.map(lead => lead.source || \"Unknown\").filter(Boolean));\n      return Array.from(sources);\n   }, [initialData]);\n\n\n  // Update local data when initialData prop changes\n  React.useEffect(() => {\n    setData(initialData || []); // Ensure initialData is an array when updating state\n    // If the currently editing row is no longer in the new data, cancel edit\n    if (editingRowId && !(initialData || []).some(d => d.id === editingRowId)) {\n      cancelInlineEdit();\n    }\n  }, [initialData, editingRowId]);\n\n\n  const startInlineEdit = (rowId: number | string, initialData: Lead) => {\n    if (editingRowId && editingRowId !== rowId) {\n        toast({ variant: \"destructive\", title: \"Edit Conflict\", description: \"Please save or cancel the current edit first.\" });\n        return;\n    }\n    setEditingRowId(rowId);\n    // Include new fields in editable list\n    const editableFields: (keyof Lead)[] = [\n        \"callDate\", \"callBookedLost\", \"callStatus\", \"callOutcome\",\n        \"nadDate\", \"nadBookedLost\", \"remark\", \"location\",\n        \"leadStatus\", \"leadResult\" // Add new fields\n    ];\n    const initialEditableData: Partial<Lead> = {};\n    editableFields.forEach(field => {\n        if (isEmployeeEditable(field) || userRole === 'admin') {\n             if (Object.prototype.hasOwnProperty.call(initialData, field)) {\n                 initialEditableData[field] = initialData[field];\n             }\n        }\n    });\n     initialEditableData.id = rowId;\n    setEditedRowData(initialEditableData);\n  };\n\n   const handleInlineChange = (fieldName: keyof Lead, value: any) => {\n     setEditedRowData(prev => ({ ...prev, [fieldName]: value }));\n   };\n\n   const cancelInlineEdit = () => {\n     setEditingRowId(null);\n     setEditedRowData(null);\n     setIsSavingInline(false);\n   };\n\n  const saveInlineEdit = async () => {\n    if (!editingRowId || !editedRowData) return;\n\n    setIsSavingInline(true);\n     const leadToUpdate = data.find(d => d.id === editingRowId);\n     if (!leadToUpdate) {\n       toast({ variant: \"destructive\", title: \"Error\", description: \"Could not find the lead to update.\" });\n       setIsSavingInline(false);\n       return;\n     }\n\n    const updatePayload: Partial<Lead> = { id: editingRowId };\n     let hasChanges = false;\n      // Include new fields in editable list for comparison\n     const editableFields: (keyof Lead)[] = [\n        \"callDate\", \"callBookedLost\", \"callStatus\", \"callOutcome\",\n        \"nadDate\", \"nadBookedLost\", \"remark\", \"location\",\n        \"leadStatus\", \"leadResult\" // Add new fields\n     ];\n\n     editableFields.forEach(field => {\n         if (Object.prototype.hasOwnProperty.call(editedRowData, field)) {\n              const initialValue = leadToUpdate[field];\n              const editedValue = editedRowData[field];\n\n              if ((field === 'callDate' || field === 'nadDate')) {\n                  const initialDateStr = initialValue ? new Date(initialValue).toISOString().split('T')[0] : null;\n                  const editedDateStr = editedValue ? new Date(editedValue).toISOString().split('T')[0] : null;\n                   if (initialDateStr !== editedDateStr) {\n                       updatePayload[field] = editedValue ? new Date(editedValue).toISOString() : null;\n                       hasChanges = true;\n                   }\n              } else if (initialValue !== editedValue) {\n                   if (isEmployeeEditable(field) || userRole === 'admin') {\n                       updatePayload[field] = editedValue === \"\" ? null : editedValue; // Send null if empty string\n                       hasChanges = true;\n                   }\n              }\n         }\n     });\n\n\n     if (!hasChanges) {\n         toast({ title: \"No Changes\", description: \"No modifications were made.\" });\n         cancelInlineEdit();\n         return;\n     }\n\n     updatePayload.lastUpdated = new Date().toISOString();\n\n\n    try {\n       const result = await onUpdate(updatePayload);\n       if (result.success) {\n         toast({ title: \"Update Successful\", description: \"Lead details saved.\" });\n          setData(prevData => prevData.map(d =>\n             d.id === editingRowId ? { ...d, ...updatePayload } : d\n          ));\n         cancelInlineEdit(); // Exit editing mode\n       } else {\n         toast({ variant: \"destructive\", title: \"Update Failed\", description: \"Could not save changes.\" });\n       }\n    } catch (error) {\n      console.error(\"Inline save error:\", error);\n      toast({ variant: \"destructive\", title: \"Error\", description: \"An unexpected error occurred during save.\" });\n    } finally {\n      setIsSavingInline(false);\n    }\n  };\n\n\n   const isEmployeeEditable = (field: keyof Lead): boolean => {\n     // Include new fields in employee editable list\n     const editableFields: (keyof Lead)[] = [\n       \"callDate\", \"callBookedLost\", \"callStatus\", \"callOutcome\",\n       \"nadDate\", \"nadBookedLost\", \"remark\", \"location\",\n       \"leadStatus\", \"leadResult\" // Add new fields\n     ];\n     return editableFields.includes(field);\n   };\n\n   const columns = React.useMemo(\n     () => getColumns(\n       userRole === 'admin' ? () => true : isEmployeeEditable,\n       onEditDialog,\n       userRole === 'admin' ? onDelete : undefined,\n       {\n         editingRowId,\n         editedRowData,\n         handleInlineChange,\n         startInlineEdit,\n         saveInlineEdit,\n         cancelInlineEdit,\n         isSavingInline,\n       }\n     ),\n     [userRole, onEditDialog, onDelete, editingRowId, editedRowData, isSavingInline]\n   );\n\n\n\n  const table = useReactTable({\n    data,\n    columns,\n    filterFns: { // Register fuzzy filter\n        fuzzy: fuzzyFilter,\n    },\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n      globalFilter,\n    },\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: onRowSelectionChange,\n    onGlobalFilterChange: setGlobalFilter,\n    globalFilterFn: 'fuzzy', // Set global filter function\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n     enableRowSelection: !!onRowSelectionChange,\n     meta: {\n       updateData: (rowIndex: number, columnId: string, value: unknown) => {\n         setData(old =>\n           old.map((row, index) => {\n             if (index === rowIndex) {\n               return {\n                 ...old[rowIndex]!,\n                 [columnId]: value,\n               }\n             }\n             return row\n           })\n         )\n       },\n       editingRowId: editingRowId,\n       isSavingInline: isSavingInline,\n     },\n  });\n\n   const getFilterOptions = (columnId: string): string[] => {\n    switch (columnId) {\n      case 'callStatus':\n        return callStatuses.filter(s => s !== null) as string[] || [];\n      case 'callOutcome':\n        return callOutcomes.filter(o => o !== null) as string[] || [];\n      case 'leadStatus': // Add filter options for leadStatus\n          return leadStatuses.filter(s => s !== null) as string[] || [];\n      case 'leadResult': // Add filter options for leadResult\n          return leadResults.filter(r => r !== null) as string[] || [];\n      case 'assignedTo':\n          const employees = userRole === 'admin' ? availableEmployees : [];\n          // Ensure \"Unassigned\" is only added if not already present\n          const uniqueEmployees = Array.from(new Set(employees));\n          if (!uniqueEmployees.includes(\"Unassigned\")) {\n              uniqueEmployees.push(\"Unassigned\");\n          }\n          return uniqueEmployees;\n      case 'source':\n          return availableSources;\n      default:\n        return [];\n    }\n  };\n\n\n  return (\n    <div className=\"w-full space-y-4\">\n      {/* Filters and Actions Bar - Adjusted for responsiveness */}\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 py-4\">\n         <Input\n          placeholder=\"Search all columns...\"\n          value={globalFilter ?? ''}\n          onChange={(event) => setGlobalFilter(event.target.value)}\n          className=\"max-w-full sm:max-w-xs md:max-w-sm h-9 border-primary ring-primary focus:ring-primary\" // Adjusted max width\n        />\n\n        <div className=\"flex items-center gap-2 self-start sm:self-center mt-2 sm:mt-0\"> {/* Align buttons */}\n         {/* Column Visibility Dropdown */}\n         <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"default\" size=\"sm\"> {/* Removed ml-auto */}\n                Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              <DropdownMenuLabel>Toggle Columns</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                       {/* Improve display name generation */}\n                       {column.id.replace(/([A-Z])/g, ' $1').replace(/_/g, ' ').replace(/^./, str => str.toUpperCase()).trim()}\n                    </DropdownMenuCheckboxItem>\n                  );\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n\n            {/* Filter Dropdown */}\n           <DropdownMenu>\n             <DropdownMenuTrigger asChild>\n               <Button variant=\"default\" size=\"sm\">\n                 <FilterIcon className=\"mr-2 h-4 w-4\" /> Filters\n               </Button>\n             </DropdownMenuTrigger>\n             <DropdownMenuContent align=\"end\" className=\"w-[250px] max-h-[400px] overflow-y-auto\"> {/* Add max height and scroll */}\n               <DropdownMenuLabel>Filter by</DropdownMenuLabel>\n               <DropdownMenuSeparator />\n                 {/* Call Status Filter */}\n                 {table.getColumn('callStatus') && getFilterOptions('callStatus').length > 0 && (\n                    <>\n                     <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Call Status</DropdownMenuLabel>\n                     {getFilterOptions('callStatus').map((status) => (\n                       <DropdownMenuCheckboxItem\n                          key={status}\n                          checked={(table.getColumn('callStatus')?.getFilterValue() as string[] | undefined)?.includes(status) ?? false}\n                          onCheckedChange={(checked) => {\n                            const currentFilter = (table.getColumn('callStatus')?.getFilterValue() as string[] | undefined) ?? [];\n                            const newFilter = checked\n                              ? [...currentFilter, status]\n                              : currentFilter.filter(s => s !== status);\n                             table.getColumn('callStatus')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                          }}\n                       >\n                         {status}\n                       </DropdownMenuCheckboxItem>\n                     ))}\n                      <DropdownMenuSeparator />\n                    </>\n                 )}\n                  {/* Call Outcome Filter */}\n                 {table.getColumn('callOutcome') && getFilterOptions('callOutcome').length > 0 && (\n                    <>\n                     <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Call Outcome</DropdownMenuLabel>\n                     {getFilterOptions('callOutcome').map((outcome) => (\n                       <DropdownMenuCheckboxItem\n                          key={outcome}\n                          checked={(table.getColumn('callOutcome')?.getFilterValue() as string[] | undefined)?.includes(outcome) ?? false}\n                           onCheckedChange={(checked) => {\n                            const currentFilter = (table.getColumn('callOutcome')?.getFilterValue() as string[] | undefined) ?? [];\n                            const newFilter = checked\n                              ? [...currentFilter, outcome]\n                              : currentFilter.filter(s => s !== outcome);\n                             table.getColumn('callOutcome')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                          }}\n                       >\n                         {outcome}\n                       </DropdownMenuCheckboxItem>\n                     ))}\n                      <DropdownMenuSeparator />\n                    </>\n                 )}\n                 {/* Lead Status Filter */}\n                 {table.getColumn('leadStatus') && getFilterOptions('leadStatus').length > 0 && (\n                     <>\n                         <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Lead Status</DropdownMenuLabel>\n                         {getFilterOptions('leadStatus').map((status) => (\n                             <DropdownMenuCheckboxItem\n                                 key={status}\n                                 checked={(table.getColumn('leadStatus')?.getFilterValue() as string[] | undefined)?.includes(status) ?? false}\n                                 onCheckedChange={(checked) => {\n                                     const currentFilter = (table.getColumn('leadStatus')?.getFilterValue() as string[] | undefined) ?? [];\n                                     const newFilter = checked\n                                         ? [...currentFilter, status]\n                                         : currentFilter.filter(s => s !== status);\n                                     table.getColumn('leadStatus')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                                 }}\n                             >\n                                 {status}\n                             </DropdownMenuCheckboxItem>\n                         ))}\n                         <DropdownMenuSeparator />\n                     </>\n                 )}\n                 {/* Lead Result Filter */}\n                 {table.getColumn('leadResult') && getFilterOptions('leadResult').length > 0 && (\n                     <>\n                         <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Lead Result</DropdownMenuLabel>\n                         {getFilterOptions('leadResult').map((result) => (\n                             <DropdownMenuCheckboxItem\n                                 key={result}\n                                 checked={(table.getColumn('leadResult')?.getFilterValue() as string[] | undefined)?.includes(result) ?? false}\n                                 onCheckedChange={(checked) => {\n                                     const currentFilter = (table.getColumn('leadResult')?.getFilterValue() as string[] | undefined) ?? [];\n                                     const newFilter = checked\n                                         ? [...currentFilter, result]\n                                         : currentFilter.filter(s => s !== result);\n                                     table.getColumn('leadResult')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                                 }}\n                             >\n                                 {result}\n                             </DropdownMenuCheckboxItem>\n                         ))}\n                         <DropdownMenuSeparator />\n                     </>\n                 )}\n                 {/* Assigned To Filter (Admin only) */}\n                 {userRole === 'admin' && table.getColumn('assignedTo') && getFilterOptions('assignedTo').length > 0 && (\n                    <>\n                     <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Assigned To</DropdownMenuLabel>\n                     {getFilterOptions('assignedTo').map((employee) => (\n                       <DropdownMenuCheckboxItem\n                          key={employee}\n                          checked={(table.getColumn('assignedTo')?.getFilterValue() as string[] | undefined)?.includes(employee) ?? false}\n                           onCheckedChange={(checked) => {\n                            const currentFilter = (table.getColumn('assignedTo')?.getFilterValue() as string[] | undefined) ?? [];\n                            const newFilter = checked\n                              ? [...currentFilter, employee]\n                              : currentFilter.filter(s => s !== employee);\n                             table.getColumn('assignedTo')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                          }}\n                       >\n                         {employee || \"Unassigned\"}\n                       </DropdownMenuCheckboxItem>\n                     ))}\n                     <DropdownMenuSeparator />\n                    </>\n                 )}\n                 {/* Source Filter */}\n                 {table.getColumn('source') && getFilterOptions('source').length > 0 && (\n                    <>\n                     <DropdownMenuLabel className=\"text-xs font-semibold px-2 pt-2\">Source</DropdownMenuLabel>\n                     {getFilterOptions('source').map((source) => (\n                       <DropdownMenuCheckboxItem\n                          key={source}\n                          checked={(table.getColumn('source')?.getFilterValue() as string[] | undefined)?.includes(source) ?? false}\n                           onCheckedChange={(checked) => {\n                            const currentFilter = (table.getColumn('source')?.getFilterValue() as string[] | undefined) ?? [];\n                            const newFilter = checked\n                              ? [...currentFilter, source]\n                              : currentFilter.filter(s => s !== source);\n                             table.getColumn('source')?.setFilterValue(newFilter.length ? newFilter : undefined);\n                          }}\n                       >\n                         {source || \"Unknown\"}\n                       </DropdownMenuCheckboxItem>\n                     ))}\n                    </>\n                 )}\n             </DropdownMenuContent>\n           </DropdownMenu>\n        </div>\n      </div>\n\n      {/* Table Container with Horizontal Scroll */}\n      <div className=\"overflow-x-auto\">\n        <div className=\"rounded-md border shadow-sm bg-card min-w-[800px]\"> {/* Set a min-width for the inner table container */}\n            <Table>\n            <TableHeader>\n                {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id} className=\"border-b border-primary/20 hover:bg-transparent\"> {/* Adjusted border and hover */}\n                    {headerGroup.headers.map((header) => {\n                    return (\n                        <TableHead key={header.id} className=\"whitespace-nowrap border-x border-primary/10 px-3 py-2 text-primary/80 font-semibold\"> {/* Adjusted styles */}\n                        {header.isPlaceholder\n                            ? null\n                            : flexRender(\n                                header.column.columnDef.header,\n                                header.getContext()\n                            )}\n                        </TableHead>\n                    );\n                    })}\n                </TableRow>\n                ))}\n            </TableHeader>\n            <TableBody>\n                {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                    <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && \"selected\"}\n                    className={cn(\n                        \"border-b border-primary/10 hover:bg-muted/50 data-[state=selected]:bg-muted\", // Adjusted border and hover\n                        editingRowId === row.original.id && \"bg-muted/80 outline outline-1 outline-primary\" // Enhanced editing highlight\n                        )}\n                    >\n                    {row.getVisibleCells().map((cell) => (\n                        <TableCell key={cell.id} className=\"whitespace-nowrap border-x border-primary/10 px-3 py-1.5 align-top\"> {/* Added align-top */}\n                        {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                        )}\n                        </TableCell>\n                    ))}\n                    </TableRow>\n                ))\n                ) : (\n                <TableRow>\n                    <TableCell\n                    colSpan={table.getAllColumns().length}\n                    className=\"h-24 text-center border-x border-primary/10\" // Added borders\n                    >\n                    No results found.\n                    </TableCell>\n                </TableRow>\n                )}\n            </TableBody>\n            </Table>\n        </div>\n      </div>\n\n\n      {/* Pagination - Adjusted for responsiveness */}\n      <div className=\"flex flex-col sm:flex-row items-center justify-between space-y-2 sm:space-y-0 sm:space-x-2 py-4\">\n         <div className=\"flex-1 text-sm text-muted-foreground text-center sm:text-left\"> {/* Centered text on small screens */}\n          {onRowSelectionChange && ( // Only show selection count if selection is enabled\n               <>\n                   {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n                   {table.getFilteredRowModel().rows.length} row(s) selected.\n               </>\n           )}\n            {!onRowSelectionChange && ( // Show total rows if selection is not enabled\n                 <>\n                     Total {table.getFilteredRowModel().rows.length} row(s).\n                 </>\n             )}\n        </div>\n        <div className=\"flex items-center space-x-2 justify-center sm:justify-end\"> {/* Centered buttons on small screens */}\n           <span className=\"text-sm text-muted-foreground hidden sm:inline-block\"> {/* Hide page count text on extra small screens */}\n             Page {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n           </span>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,cAAc;AACd,8BAA8B;;;;;AAG9B;AACA;AAAA;AAaA,kTAAyD,gCAAgC;AAEzF;AAQA;AACA;AACA;AAQA;AAAA;AAEA,uQAA0G,gCAAgC;AAC1I;AACA,wMAAkC,YAAY;AAxC9C;;;;;;;;;;;;;AAiEA,0CAA0C;AAC1C,MAAM,cAA8B,CAAC,KAAK,UAAU,OAAO;IACvD,gBAAgB;IAChB,MAAM,WAAW,CAAA,GAAA,gLAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,QAAQ,CAAC,WAAW;IAElD,0BAA0B;IAC1B,QAAQ;QAAE;IAAS;IAEnB,+CAA+C;IAC/C,OAAO,SAAS,MAAM;AAC1B;AAGO,SAAS,cAA0C,EACxD,MAAM,WAAW,EACjB,YAAY,EACZ,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,qBAAqB,EAAE,EACvB,eAAe,CAAC,CAAC,EACjB,oBAAoB,EAC2B;IAC/C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAW,eAAe,EAAE,GAAG,iCAAiC;IACrG,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAgB,EAAE;IAC7D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAsB,EAAE;IAC/E,wCAAwC;IACxC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAmB;QAC7E,aAAa;QACb,SAAS,aAAa;QACtB,QAAQ;QACR,OAAO;QACP,YAAY,aAAa,aAAa,QAAQ;QAC9C,IAAI;QACJ,YAAY;QACZ,UAAU;QACV,gBAAgB;QAChB,eAAe;IAClB;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IACvD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,uBAAuB;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAA0B;IAC/E,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAwB;IAC/E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAE1D,uCAAuC;IACvC,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACpC,qDAAqD;QACrD,IAAI,CAAC,MAAM,OAAO,CAAC,cAAc;YAC7B,QAAQ,IAAI,CAAC,iCAAiC;YAC9C,OAAO,EAAE;QACb;QACA,MAAM,UAAU,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM,IAAI,WAAW,MAAM,CAAC;QACjF,OAAO,MAAM,IAAI,CAAC;IACrB,GAAG;QAAC;KAAY;IAGjB,kDAAkD;IAClD,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,QAAQ,eAAe,EAAE,GAAG,qDAAqD;QACjF,yEAAyE;QACzE,IAAI,gBAAgB,CAAC,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,eAAe;YACzE;QACF;IACF,GAAG;QAAC;QAAa;KAAa;IAG9B,MAAM,kBAAkB,CAAC,OAAwB;QAC/C,IAAI,gBAAgB,iBAAiB,OAAO;YACxC,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAiB,aAAa;YAAgD;YACrH;QACJ;QACA,gBAAgB;QAChB,sCAAsC;QACtC,MAAM,iBAAiC;YACnC;YAAY;YAAkB;YAAc;YAC5C;YAAW;YAAiB;YAAU;YACtC;YAAc,aAAa,iBAAiB;SAC/C;QACD,MAAM,sBAAqC,CAAC;QAC5C,eAAe,OAAO,CAAC,CAAA;YACnB,IAAI,mBAAmB,UAAU,aAAa,SAAS;gBAClD,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,QAAQ;oBAC1D,mBAAmB,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM;gBACnD;YACL;QACJ;QACC,oBAAoB,EAAE,GAAG;QAC1B,iBAAiB;IACnB;IAEC,MAAM,qBAAqB,CAAC,WAAuB;QACjD,iBAAiB,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,UAAU,EAAE;YAAM,CAAC;IAC3D;IAEA,MAAM,mBAAmB;QACvB,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;IACpB;IAED,MAAM,iBAAiB;QACrB,IAAI,CAAC,gBAAgB,CAAC,eAAe;QAErC,kBAAkB;QACjB,MAAM,eAAe,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAC7C,IAAI,CAAC,cAAc;YACjB,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa;YAAqC;YAClG,kBAAkB;YAClB;QACF;QAED,MAAM,gBAA+B;YAAE,IAAI;QAAa;QACvD,IAAI,aAAa;QAChB,qDAAqD;QACtD,MAAM,iBAAiC;YACpC;YAAY;YAAkB;YAAc;YAC5C;YAAW;YAAiB;YAAU;YACtC;YAAc,aAAa,iBAAiB;SAC9C;QAED,eAAe,OAAO,CAAC,CAAA;YACnB,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,QAAQ;gBAC3D,MAAM,eAAe,YAAY,CAAC,MAAM;gBACxC,MAAM,cAAc,aAAa,CAAC,MAAM;gBAExC,IAAK,UAAU,cAAc,UAAU,WAAY;oBAC/C,MAAM,iBAAiB,eAAe,IAAI,KAAK,cAAc,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;oBAC3F,MAAM,gBAAgB,cAAc,IAAI,KAAK,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;oBACvF,IAAI,mBAAmB,eAAe;wBAClC,aAAa,CAAC,MAAM,GAAG,cAAc,IAAI,KAAK,aAAa,WAAW,KAAK;wBAC3E,aAAa;oBACjB;gBACL,OAAO,IAAI,iBAAiB,aAAa;oBACpC,IAAI,mBAAmB,UAAU,aAAa,SAAS;wBACnD,aAAa,CAAC,MAAM,GAAG,gBAAgB,KAAK,OAAO,aAAa,4BAA4B;wBAC5F,aAAa;oBACjB;gBACL;YACL;QACJ;QAGA,IAAI,CAAC,YAAY;YACb,MAAM;gBAAE,OAAO;gBAAc,aAAa;YAA8B;YACxE;YACA;QACJ;QAEA,cAAc,WAAW,GAAG,IAAI,OAAO,WAAW;QAGnD,IAAI;YACD,MAAM,SAAS,MAAM,SAAS;YAC9B,IAAI,OAAO,OAAO,EAAE;gBAClB,MAAM;oBAAE,OAAO;oBAAqB,aAAa;gBAAsB;gBACtE,QAAQ,CAAA,WAAY,SAAS,GAAG,CAAC,CAAA,IAC9B,EAAE,EAAE,KAAK,eAAe;4BAAE,GAAG,CAAC;4BAAE,GAAG,aAAa;wBAAC,IAAI;gBAEzD,oBAAoB,oBAAoB;YAC1C,OAAO;gBACL,MAAM;oBAAE,SAAS;oBAAe,OAAO;oBAAiB,aAAa;gBAA0B;YACjG;QACH,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAS,aAAa;YAA4C;QAC3G,SAAU;YACR,kBAAkB;QACpB;IACF;IAGC,MAAM,qBAAqB,CAAC;QAC1B,+CAA+C;QAC/C,MAAM,iBAAiC;YACrC;YAAY;YAAkB;YAAc;YAC5C;YAAW;YAAiB;YAAU;YACtC;YAAc,aAAa,iBAAiB;SAC7C;QACD,OAAO,eAAe,QAAQ,CAAC;IACjC;IAEA,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAC1B,IAAM,CAAA,GAAA,uJAAA,CAAA,aAAU,AAAD,EACb,aAAa,UAAU,IAAM,OAAO,oBACpC,cACA,aAAa,UAAU,WAAW,WAClC;YACE;YACA;YACA;YACA;YACA;YACA;YACA;QACF,IAEF;QAAC;QAAU;QAAc;QAAU;QAAc;QAAe;KAAe;IAKlF,MAAM,QAAQ,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;QAC1B;QACA;QACA,WAAW;YACP,OAAO;QACX;QACA,OAAO;YACL;YACA;YACA;YACA;YACA;QACF;QACA,iBAAiB;QACjB,uBAAuB;QACvB,0BAA0B;QAC1B,sBAAsB;QACtB,sBAAsB;QACtB,gBAAgB;QAChB,iBAAiB,CAAA,GAAA,qKAAA,CAAA,kBAAe,AAAD;QAC/B,mBAAmB,CAAA,GAAA,qKAAA,CAAA,oBAAiB,AAAD;QACnC,qBAAqB,CAAA,GAAA,qKAAA,CAAA,sBAAmB,AAAD;QACvC,uBAAuB,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD;QAC1C,oBAAoB,CAAC,CAAC;QACtB,MAAM;YACJ,YAAY,CAAC,UAAkB,UAAkB;gBAC/C,QAAQ,CAAA,MACN,IAAI,GAAG,CAAC,CAAC,KAAK;wBACZ,IAAI,UAAU,UAAU;4BACtB,OAAO;gCACL,GAAG,GAAG,CAAC,SAAS;gCAChB,CAAC,SAAS,EAAE;4BACd;wBACF;wBACA,OAAO;oBACT;YAEJ;YACA,cAAc;YACd,gBAAgB;QAClB;IACH;IAEC,MAAM,mBAAmB,CAAC;QACzB,OAAQ;YACN,KAAK;gBACH,OAAO,uJAAA,CAAA,eAAY,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM,SAAqB,EAAE;YAC/D,KAAK;gBACH,OAAO,uJAAA,CAAA,eAAY,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM,SAAqB,EAAE;YAC/D,KAAK;gBACD,OAAO,uJAAA,CAAA,eAAY,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM,SAAqB,EAAE;YACjE,KAAK;gBACD,OAAO,uJAAA,CAAA,cAAW,CAAC,MAAM,CAAC,CAAA,IAAK,MAAM,SAAqB,EAAE;YAChE,KAAK;gBACD,MAAM,YAAY,aAAa,UAAU,qBAAqB,EAAE;gBAChE,2DAA2D;gBAC3D,MAAM,kBAAkB,MAAM,IAAI,CAAC,IAAI,IAAI;gBAC3C,IAAI,CAAC,gBAAgB,QAAQ,CAAC,eAAe;oBACzC,gBAAgB,IAAI,CAAC;gBACzB;gBACA,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACE,OAAO,EAAE;QACb;IACF;IAGA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACZ,8OAAC,iIAAA,CAAA,QAAK;wBACL,aAAY;wBACZ,OAAO,gBAAgB;wBACvB,UAAU,CAAC,QAAU,gBAAgB,MAAM,MAAM,CAAC,KAAK;wBACvD,WAAU,wFAAwF,qBAAqB;;;;;;kCAGzH,8OAAC;wBAAI,WAAU;;4BAAiE;0CAE/E,8OAAC,4IAAA,CAAA,eAAY;;kDACV,8OAAC,4IAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,MAAK;;gDAAK;gDAAwB;8DAClD,8OAAC,oNAAA,CAAA,cAAW;oDAAC,WAAU;;;;;;;;;;;;;;;;;kDAGnC,8OAAC,4IAAA,CAAA,sBAAmB;wCAAC,OAAM;;0DACzB,8OAAC,4IAAA,CAAA,oBAAiB;0DAAC;;;;;;0DACnB,8OAAC,4IAAA,CAAA,wBAAqB;;;;;4CACrB,MACE,aAAa,GACb,MAAM,CAAC,CAAC,SAAW,OAAO,UAAU,IACpC,GAAG,CAAC,CAAC;gDACJ,qBACE,8OAAC,4IAAA,CAAA,2BAAwB;oDAEvB,WAAU;oDACV,SAAS,OAAO,YAAY;oDAC5B,iBAAiB,CAAC,QAChB,OAAO,gBAAgB,CAAC,CAAC,CAAC;8DAI1B,OAAO,EAAE,CAAC,OAAO,CAAC,YAAY,OAAO,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,CAAA,MAAO,IAAI,WAAW,IAAI,IAAI;mDARjG,OAAO,EAAE;;;;;4CAWpB;;;;;;;;;;;;;0CAKL,8OAAC,4IAAA,CAAA,eAAY;;kDACX,8OAAC,4IAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,MAAK;;8DAC7B,8OAAC,sMAAA,CAAA,SAAU;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;kDAG3C,8OAAC,4IAAA,CAAA,sBAAmB;wCAAC,OAAM;wCAAM,WAAU;;4CAA0C;0DACnF,8OAAC,4IAAA,CAAA,oBAAiB;0DAAC;;;;;;0DACnB,8OAAC,4IAAA,CAAA,wBAAqB;;;;;4CAEnB,MAAM,SAAS,CAAC,iBAAiB,iBAAiB,cAAc,MAAM,GAAG,mBACvE;;kEACC,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,cAAc,GAAG,CAAC,CAAC,uBACnC,8OAAC,4IAAA,CAAA,2BAAwB;4DAEtB,SAAS,AAAC,MAAM,SAAS,CAAC,eAAe,kBAA2C,SAAS,WAAW;4DACxG,iBAAiB,CAAC;gEAChB,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,eAAe,oBAA6C,EAAE;gEACrG,MAAM,YAAY,UACd;uEAAI;oEAAe;iEAAO,GAC1B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACnC,MAAM,SAAS,CAAC,eAAe,eAAe,UAAU,MAAM,GAAG,YAAY;4DAChF;sEAEA;2DAVK;;;;;kEAaT,8OAAC,4IAAA,CAAA,wBAAqB;;;;;;;4CAI1B,MAAM,SAAS,CAAC,kBAAkB,iBAAiB,eAAe,MAAM,GAAG,mBACzE;;kEACC,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,eAAe,GAAG,CAAC,CAAC,wBACpC,8OAAC,4IAAA,CAAA,2BAAwB;4DAEtB,SAAS,AAAC,MAAM,SAAS,CAAC,gBAAgB,kBAA2C,SAAS,YAAY;4DACzG,iBAAiB,CAAC;gEACjB,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,gBAAgB,oBAA6C,EAAE;gEACtG,MAAM,YAAY,UACd;uEAAI;oEAAe;iEAAQ,GAC3B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACnC,MAAM,SAAS,CAAC,gBAAgB,eAAe,UAAU,MAAM,GAAG,YAAY;4DACjF;sEAEA;2DAVK;;;;;kEAaT,8OAAC,4IAAA,CAAA,wBAAqB;;;;;;;4CAI1B,MAAM,SAAS,CAAC,iBAAiB,iBAAiB,cAAc,MAAM,GAAG,mBACtE;;kEACI,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,cAAc,GAAG,CAAC,CAAC,uBACjC,8OAAC,4IAAA,CAAA,2BAAwB;4DAErB,SAAS,AAAC,MAAM,SAAS,CAAC,eAAe,kBAA2C,SAAS,WAAW;4DACxG,iBAAiB,CAAC;gEACd,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,eAAe,oBAA6C,EAAE;gEACrG,MAAM,YAAY,UACZ;uEAAI;oEAAe;iEAAO,GAC1B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACtC,MAAM,SAAS,CAAC,eAAe,eAAe,UAAU,MAAM,GAAG,YAAY;4DACjF;sEAEC;2DAVI;;;;;kEAab,8OAAC,4IAAA,CAAA,wBAAqB;;;;;;;4CAI7B,MAAM,SAAS,CAAC,iBAAiB,iBAAiB,cAAc,MAAM,GAAG,mBACtE;;kEACI,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,cAAc,GAAG,CAAC,CAAC,uBACjC,8OAAC,4IAAA,CAAA,2BAAwB;4DAErB,SAAS,AAAC,MAAM,SAAS,CAAC,eAAe,kBAA2C,SAAS,WAAW;4DACxG,iBAAiB,CAAC;gEACd,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,eAAe,oBAA6C,EAAE;gEACrG,MAAM,YAAY,UACZ;uEAAI;oEAAe;iEAAO,GAC1B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACtC,MAAM,SAAS,CAAC,eAAe,eAAe,UAAU,MAAM,GAAG,YAAY;4DACjF;sEAEC;2DAVI;;;;;kEAab,8OAAC,4IAAA,CAAA,wBAAqB;;;;;;;4CAI7B,aAAa,WAAW,MAAM,SAAS,CAAC,iBAAiB,iBAAiB,cAAc,MAAM,GAAG,mBAC/F;;kEACC,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,cAAc,GAAG,CAAC,CAAC,yBACnC,8OAAC,4IAAA,CAAA,2BAAwB;4DAEtB,SAAS,AAAC,MAAM,SAAS,CAAC,eAAe,kBAA2C,SAAS,aAAa;4DACzG,iBAAiB,CAAC;gEACjB,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,eAAe,oBAA6C,EAAE;gEACrG,MAAM,YAAY,UACd;uEAAI;oEAAe;iEAAS,GAC5B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACnC,MAAM,SAAS,CAAC,eAAe,eAAe,UAAU,MAAM,GAAG,YAAY;4DAChF;sEAEA,YAAY;2DAVP;;;;;kEAaV,8OAAC,4IAAA,CAAA,wBAAqB;;;;;;;4CAIzB,MAAM,SAAS,CAAC,aAAa,iBAAiB,UAAU,MAAM,GAAG,mBAC/D;;kEACC,8OAAC,4IAAA,CAAA,oBAAiB;wDAAC,WAAU;kEAAkC;;;;;;oDAC9D,iBAAiB,UAAU,GAAG,CAAC,CAAC,uBAC/B,8OAAC,4IAAA,CAAA,2BAAwB;4DAEtB,SAAS,AAAC,MAAM,SAAS,CAAC,WAAW,kBAA2C,SAAS,WAAW;4DACnG,iBAAiB,CAAC;gEACjB,MAAM,gBAAgB,AAAC,MAAM,SAAS,CAAC,WAAW,oBAA6C,EAAE;gEACjG,MAAM,YAAY,UACd;uEAAI;oEAAe;iEAAO,GAC1B,cAAc,MAAM,CAAC,CAAA,IAAK,MAAM;gEACnC,MAAM,SAAS,CAAC,WAAW,eAAe,UAAU,MAAM,GAAG,YAAY;4DAC5E;sEAEA,UAAU;2DAVL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAqBzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;wBAAoD;sCAC/D,8OAAC,iIAAA,CAAA,QAAK;;8CACN,8OAAC,iIAAA,CAAA,cAAW;8CACP,MAAM,eAAe,GAAG,GAAG,CAAC,CAAC,4BAC9B,8OAAC,iIAAA,CAAA,WAAQ;4CAAsB,WAAU;;gDAAkD;gDACtF,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;oDAC1B,qBACI,8OAAC,iIAAA,CAAA,YAAS;wDAAiB,WAAU;;4DAAuF;4DAC3H,OAAO,aAAa,GACf,OACA,CAAA,GAAA,sLAAA,CAAA,aAAU,AAAD,EACP,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,EAC9B,OAAO,UAAU;;uDALT,OAAO,EAAE;;;;;gDAS7B;;2CAZW,YAAY,EAAE;;;;;;;;;;8CAgBjC,8OAAC,iIAAA,CAAA,YAAS;8CACL,MAAM,WAAW,GAAG,IAAI,EAAE,SAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,oBAC1B,8OAAC,iIAAA,CAAA,WAAQ;4CAET,cAAY,IAAI,aAAa,MAAM;4CACnC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,+EACA,iBAAiB,IAAI,QAAQ,CAAC,EAAE,IAAI,gDAAgD,6BAA6B;;sDAGpH,IAAI,eAAe,GAAG,GAAG,CAAC,CAAC,qBACxB,8OAAC,iIAAA,CAAA,YAAS;oDAAe,WAAU;;wDAAqE;wDACvG,CAAA,GAAA,sLAAA,CAAA,aAAU,AAAD,EACN,KAAK,MAAM,CAAC,SAAS,CAAC,IAAI,EAC1B,KAAK,UAAU;;mDAHH,KAAK,EAAE;;;;;2CARtB,IAAI,EAAE;;;;kEAkBf,8OAAC,iIAAA,CAAA,WAAQ;kDACL,cAAA,8OAAC,iIAAA,CAAA,YAAS;4CACV,SAAS,MAAM,aAAa,GAAG,MAAM;4CACrC,WAAU,8CAA8C,gBAAgB;;sDACvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAYf,8OAAC;gBAAI,WAAU;;kCACZ,8OAAC;wBAAI,WAAU;;4BAAgE;4BAC7E,sCACI;;oCACK,MAAM,2BAA2B,GAAG,IAAI,CAAC,MAAM;oCAAC;oCAAI;oCACpD,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM;oCAAC;;;4BAG/C,CAAC,sCACG;;oCAAE;oCACS,MAAM,mBAAmB,GAAG,IAAI,CAAC,MAAM;oCAAC;;;;;;;;;kCAI5D,8OAAC;wBAAI,WAAU;;4BAA4D;0CACxE,8OAAC;gCAAK,WAAU;;oCAAuD;oCAAoD;oCACnH,MAAM,QAAQ,GAAG,UAAU,CAAC,SAAS,GAAG;oCAAE;oCAAK,MAAM,YAAY;;;;;;;0CAE1E,8OAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,MAAM,YAAY;gCACjC,UAAU,CAAC,MAAM,kBAAkB;0CACpC;;;;;;0CAGD,8OAAC,kIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,IAAM,MAAM,QAAQ;gCAC7B,UAAU,CAAC,MAAM,cAAc;0CAChC;;;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 4454, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4586, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4618, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4771, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4831, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/leads/lead-edit-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { cn } from \"@/lib/utils\";\nimport { format, parseISO } from \"date-fns\";\nimport { Calendar as CalendarIcon } from \"lucide-react\";\nimport type { Lead, CallStatus, CallOutcome, LeadStatus, LeadResult } from \"@/types/lead\"; // Import new types\nimport { callStatuses, callOutcomes, leadStatuses, leadResults } from './lead-table-columns'; // Import options\nimport { useToast } from \"@/hooks/use-toast\"; // Import useToast\n\ninterface LeadEditFormProps {\n  lead: Lead;\n  userRole: \"admin\" | \"employee\";\n  onSubmit: (data: Partial<Lead>) => Promise<void>; // Make onSubmit async\n  onCancel: () => void;\n  isLoading: boolean;\n}\n\n// Define Zod schema based on Lead type, making fields optional for partial updates\n// We make most fields optional because we only submit changed fields.\n// Required fields like `id` are handled separately.\nconst formSchema = z.object({\n  name: z.string().optional(),\n  company: z.string().optional(),\n  email: z.string().email().optional().or(z.literal(\"\")).or(z.null()), // Allow empty string and null\n  phone: z.string().optional(),\n  source: z.string().optional(),\n  assignedTo: z.string().optional().or(z.null()), // Allow null for unassigned\n  location: z.string().optional().or(z.null()),\n  remark: z.string().optional().or(z.null()),\n  callDate: z.date().optional().nullable(),\n  callBookedLost: z.enum([\"Booked\", \"Lost\"]).optional().nullable(),\n  callStatus: z.enum(callStatuses.filter(s => s !== null) as [CallStatus, ...CallStatus[]]).optional().nullable(),\n  callOutcome: z.enum(callOutcomes.filter(o => o !== null) as [CallOutcome, ...CallOutcome[]]).optional().nullable(),\n  nadDate: z.date().optional().nullable(),\n  nadBookedLost: z.enum([\"Booked\", \"Lost\"]).optional().nullable(),\n  // Add new fields to schema\n  leadStatus: z.enum(leadStatuses.filter(s => s !== null) as [LeadStatus, ...LeadStatus[]]).optional().nullable(),\n  leadResult: z.enum(leadResults.filter(r => r !== null) as [LeadResult, ...LeadResult[]]).optional().nullable(),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\n\n// Helper to check if a field is editable by the current user role\nconst isFieldEditable = (fieldName: keyof FormValues, role: \"admin\" | \"employee\"): boolean => {\n  if (role === \"admin\") {\n    return true; // Admin can edit all fields defined in the schema\n  }\n  // Employee editable fields\n  const employeeEditableFields: (keyof FormValues)[] = [\n    \"callDate\", \"callBookedLost\", \"callStatus\", \"callOutcome\",\n    \"nadDate\", \"nadBookedLost\", \"remark\", \"location\",\n    \"leadStatus\", \"leadResult\" // Add new fields\n  ];\n  return employeeEditableFields.includes(fieldName);\n};\n\nexport function LeadEditForm({ lead, userRole, onSubmit, onCancel, isLoading }: LeadEditFormProps) {\n    const { toast } = useToast(); // Get toast function\n\n  // Initialize the form with lead data\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    // Ensure defaultValues handle potential null/undefined values from lead object gracefully\n    defaultValues: {\n      name: lead.name || \"\",\n      company: lead.company || \"\",\n      email: lead.email || \"\",\n      phone: lead.phone || \"\",\n      source: lead.source || \"\",\n      assignedTo: lead.assignedTo || \"\",\n      location: lead.location || \"\",\n      remark: lead.remark || \"\",\n      callDate: lead.callDate ? parseISO(lead.callDate) : null, // Parse ISO string to Date\n      callBookedLost: lead.callBookedLost || null,\n      callStatus: lead.callStatus || null,\n      callOutcome: lead.callOutcome || null,\n      nadDate: lead.nadDate ? parseISO(lead.nadDate) : null, // Parse ISO string to Date\n      nadBookedLost: lead.nadBookedLost || null,\n      // Add new fields\n      leadStatus: lead.leadStatus || null,\n      leadResult: lead.leadResult || null,\n    },\n  });\n\n   // Function to handle form submission\n   const handleFormSubmit = async (values: FormValues) => {\n        // Prepare the data to be submitted: only include changed fields\n        const changedData: Partial<Lead> = { id: lead.id }; // Always include ID\n        let hasChanges = false;\n\n        // Compare each field in the submitted 'values' with the 'initialValues' (derived from props.lead)\n        (Object.keys(values) as Array<keyof FormValues>).forEach(key => {\n            const currentValue = values[key];\n            const initialValue = form.formState.defaultValues?.[key];\n\n            // Normalize empty strings to null for comparison and submission, except for potentially required fields like name/phone if needed\n            const normalizedCurrentValue = currentValue === \"\" ? null : currentValue;\n            const normalizedInitialValue = initialValue === \"\" ? null : initialValue;\n\n\n            // Specific comparison for Date objects (compare date part only)\n            if ((key === 'callDate' || key === 'nadDate') ) {\n                 const currentDateStr = normalizedCurrentValue instanceof Date ? format(normalizedCurrentValue, 'yyyy-MM-dd') : null;\n                 const initialDateStr = normalizedInitialValue instanceof Date ? format(normalizedInitialValue, 'yyyy-MM-dd') : null;\n\n                if (currentDateStr !== initialDateStr) {\n                     // Convert Date back to ISO string for submission if it's a Date object\n                    changedData[key] = normalizedCurrentValue instanceof Date ? normalizedCurrentValue.toISOString() : null;\n                    hasChanges = true;\n                }\n            } else if (normalizedCurrentValue !== normalizedInitialValue) {\n                 // For non-date fields, check if the normalized value has changed\n                if (isFieldEditable(key, userRole)) { // Only include if editable by role\n                    (changedData as any)[key] = normalizedCurrentValue; // Send null if it was an empty string\n                    hasChanges = true;\n                }\n            }\n        });\n\n        if (!hasChanges) {\n            toast({ title: \"No Changes\", description: \"No modifications were detected.\" });\n            onCancel(); // Close the dialog if no changes\n            return;\n        }\n\n        // Add lastUpdated timestamp only if there were changes\n        changedData.lastUpdated = new Date().toISOString();\n\n        console.log(\"Submitting changed data:\", changedData);\n        await onSubmit(changedData);\n   };\n\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleFormSubmit)} className=\"space-y-6 p-1\">\n        {/* Basic Info - Read Only for Employee */}\n        <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            disabled={!isFieldEditable(\"name\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Lead Name\" {...field} readOnly={userRole === 'employee'}/>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"phone\"\n            disabled={!isFieldEditable(\"phone\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Phone</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Phone Number\" {...field} readOnly={userRole === 'employee'}/>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            disabled={!isFieldEditable(\"email\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email (Optional)</FormLabel>\n                <FormControl>\n                  <Input type=\"email\" placeholder=\"email@example.com\" {...field} readOnly={userRole === 'employee'} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"company\"\n            disabled={!isFieldEditable(\"company\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Company (Optional)</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Company Name\" {...field} value={field.value ?? ''} readOnly={userRole === 'employee'} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"source\"\n            disabled={!isFieldEditable(\"source\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Source</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Lead Source\" {...field} value={field.value ?? ''} readOnly={userRole === 'employee'}/>\n                </FormControl>\n                 <FormDescription>e.g., Website, Referral, Upload</FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n           <FormField\n            control={form.control}\n            name=\"assignedTo\"\n            disabled={!isFieldEditable(\"assignedTo\", userRole) || isLoading}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Assigned To</FormLabel>\n                 {/* Replace with a Select dropdown populated with employees if needed */}\n                <FormControl>\n                  <Input placeholder=\"Employee ID or Name\" {...field} value={field.value ?? ''} readOnly={userRole === 'employee'}/>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Call Details - Editable by Both */}\n         <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n           <FormField\n              control={form.control}\n              name=\"callDate\"\n              disabled={!isFieldEditable(\"callDate\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel>Call Date</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button\n                          variant={\"outline\"}\n                          className={cn(\n                            \"w-full pl-3 text-left font-normal\",\n                            !field.value && \"text-muted-foreground\"\n                          )}\n                          disabled={!isFieldEditable(\"callDate\", userRole) || isLoading} // Ensure button is also disabled\n                        >\n                          {field.value ? (\n                            format(field.value, \"PPP\") // Assumes field.value is a Date object here\n                          ) : (\n                            <span>Pick a date</span>\n                          )}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value ?? undefined} // Pass undefined if null\n                        onSelect={(date) => field.onChange(date ?? null)} // Update form state with Date or null\n                        disabled={(date) =>\n                          date > new Date() || date < new Date(\"1900-01-01\")\n                        }\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                   <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"callBookedLost\"\n               disabled={!isFieldEditable(\"callBookedLost\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem className=\"space-y-3\">\n                   <FormLabel>Call Status (Booked/Lost)</FormLabel>\n                   <FormControl>\n                    <RadioGroup\n                      onValueChange={field.onChange}\n                      value={field.value ?? \"\"} // Use empty string if null\n                      className=\"flex space-x-4 pt-2\"\n                       // Disable RadioGroup if field is not editable\n                      disabled={!isFieldEditable(\"callBookedLost\", userRole) || isLoading}\n                    >\n                      <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <RadioGroupItem value=\"Booked\" />\n                        </FormControl>\n                        <FormLabel className=\"font-normal\">Booked</FormLabel>\n                      </FormItem>\n                      <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <RadioGroupItem value=\"Lost\" />\n                        </FormControl>\n                        <FormLabel className=\"font-normal\">Lost</FormLabel>\n                      </FormItem>\n                       <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                           {/* Use a button or visually distinct element for clearing */}\n                           <Button type=\"button\" variant=\"ghost\" size=\"sm\" onClick={() => field.onChange(null)} disabled={!isFieldEditable(\"callBookedLost\", userRole) || isLoading}>Clear</Button>\n                        </FormControl>\n                      </FormItem>\n                    </RadioGroup>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"callStatus\"\n              disabled={!isFieldEditable(\"callStatus\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Call Status (Connection)</FormLabel>\n                  <Select\n                    onValueChange={(value) => field.onChange(value === '__NULL__' ? null : value)}\n                    value={field.value ?? \"__NULL__\"} // Use special value for null/undefined\n                     // Disable Select if field is not editable\n                    disabled={!isFieldEditable(\"callStatus\", userRole) || isLoading}\n                  >\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select connection status\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                       <SelectItem value=\"__NULL__\">-- Clear --</SelectItem>\n                       {callStatuses.filter(s => s !== null).map(status => (\n                           <SelectItem key={status!} value={status!}>\n                           {status}\n                         </SelectItem>\n                       ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n              control={form.control}\n              name=\"callOutcome\"\n              disabled={!isFieldEditable(\"callOutcome\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Call Outcome</FormLabel>\n                   <Select\n                     onValueChange={(value) => field.onChange(value === '__NULL__' ? null : value)}\n                     value={field.value ?? \"__NULL__\"} // Use special value for null/undefined\n                       // Disable Select if field is not editable\n                     disabled={!isFieldEditable(\"callOutcome\", userRole) || isLoading}\n                    >\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select call outcome\" />\n                      </SelectTrigger>\n                    </FormControl>\n                     <SelectContent>\n                       <SelectItem value=\"__NULL__\">-- Clear --</SelectItem>\n                       {callOutcomes.filter(o => o !== null).map(outcome => (\n                         <SelectItem key={outcome!} value={outcome!}>\n                           {outcome}\n                         </SelectItem>\n                       ))}\n                     </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n        </div>\n\n        {/* Prospect Specific Details - Editable by Both */}\n         <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n            <FormField\n                control={form.control}\n                name=\"leadStatus\"\n                disabled={!isFieldEditable(\"leadStatus\", userRole) || isLoading}\n                render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Lead Status</FormLabel>\n                        <Select\n                            onValueChange={(value) => field.onChange(value === '__NULL__' ? null : value)}\n                            value={field.value ?? \"__NULL__\"}\n                            disabled={!isFieldEditable(\"leadStatus\", userRole) || isLoading}\n                        >\n                            <FormControl>\n                                <SelectTrigger>\n                                    <SelectValue placeholder=\"Select lead status\" />\n                                </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                                <SelectItem value=\"__NULL__\">-- Clear --</SelectItem>\n                                {leadStatuses.filter(s => s !== null).map(status => (\n                                    <SelectItem key={status!} value={status!}>\n                                        {status}\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                        <FormMessage />\n                    </FormItem>\n                )}\n            />\n            <FormField\n                control={form.control}\n                name=\"leadResult\"\n                disabled={!isFieldEditable(\"leadResult\", userRole) || isLoading}\n                render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Lead Result</FormLabel>\n                        <Select\n                            onValueChange={(value) => field.onChange(value === '__NULL__' ? null : value)}\n                            value={field.value ?? \"__NULL__\"}\n                            disabled={!isFieldEditable(\"leadResult\", userRole) || isLoading}\n                        >\n                            <FormControl>\n                                <SelectTrigger>\n                                    <SelectValue placeholder=\"Select lead result\" />\n                                </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                                <SelectItem value=\"__NULL__\">-- Clear --</SelectItem>\n                                {leadResults.filter(r => r !== null).map(result => (\n                                    <SelectItem key={result!} value={result!}>\n                                        {result}\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                        <FormMessage />\n                    </FormItem>\n                )}\n            />\n         </div>\n\n        {/* NAD and Location - Editable by Both */}\n        <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n           <FormField\n              control={form.control}\n              name=\"nadDate\"\n              disabled={!isFieldEditable(\"nadDate\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel>Next Action Date (NAD)</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button\n                          variant={\"outline\"}\n                           className={cn(\n                            \"w-full pl-3 text-left font-normal\",\n                            !field.value && \"text-muted-foreground\"\n                          )}\n                           disabled={!isFieldEditable(\"nadDate\", userRole) || isLoading} // Ensure button is also disabled\n                        >\n                          {field.value ? (\n                            format(field.value, \"PPP\") // Assumes field.value is a Date object here\n                          ) : (\n                            <span>Pick a date</span>\n                          )}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                       <Calendar\n                        mode=\"single\"\n                        selected={field.value ?? undefined}\n                        onSelect={(date) => field.onChange(date ?? null)}\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n              control={form.control}\n              name=\"nadBookedLost\"\n               disabled={!isFieldEditable(\"nadBookedLost\", userRole) || isLoading}\n              render={({ field }) => (\n                <FormItem className=\"space-y-3\">\n                   <FormLabel>NAD Status (Booked/Lost)</FormLabel>\n                   <FormControl>\n                     <RadioGroup\n                      onValueChange={field.onChange}\n                       value={field.value ?? \"\"} // Use empty string if null\n                      className=\"flex space-x-4 pt-2\"\n                       // Disable RadioGroup if field is not editable\n                       disabled={!isFieldEditable(\"nadBookedLost\", userRole) || isLoading}\n                    >\n                       <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <RadioGroupItem value=\"Booked\" />\n                        </FormControl>\n                        <FormLabel className=\"font-normal\">Booked</FormLabel>\n                      </FormItem>\n                      <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <RadioGroupItem value=\"Lost\" />\n                        </FormControl>\n                        <FormLabel className=\"font-normal\">Lost</FormLabel>\n                      </FormItem>\n                       <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                        <FormControl>\n                          <Button type=\"button\" variant=\"ghost\" size=\"sm\" onClick={() => field.onChange(null)} disabled={!isFieldEditable(\"nadBookedLost\", userRole) || isLoading}>Clear</Button>\n                        </FormControl>\n                      </FormItem>\n                    </RadioGroup>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n              <FormField\n                control={form.control}\n                name=\"location\"\n                disabled={!isFieldEditable(\"location\", userRole) || isLoading}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Location</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Lead Location\" {...field} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n        </div>\n\n        {/* Remarks - Editable by Both */}\n        <FormField\n          control={form.control}\n          name=\"remark\"\n          disabled={!isFieldEditable(\"remark\", userRole) || isLoading}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Remark</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Add remarks here...\"\n                  className=\"resize-y min-h-[100px]\"\n                  {...field}\n                   value={field.value ?? ''} // Ensure value is never undefined\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"flex justify-end space-x-2 pt-4\">\n           <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={isLoading}>\n              Cancel\n           </Button>\n          <Button type=\"submit\" disabled={isLoading || !form.formState.isDirty}>\n            {isLoading ? \"Saving...\" : \"Save Changes\"}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/leads/lead-edit-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose // Import DialogClose if needed for explicit close button\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { LeadEditForm } from \"./lead-edit-form\";\nimport type { Lead } from \"@/types/lead\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface LeadEditDialogProps {\n  lead: Lead | null;\n  isOpen: boolean;\n  onClose: () => void;\n  userRole: \"admin\" | \"employee\";\n  onSave: (updatedLeadData: Partial<Lead>) => Promise<void>; // Ensure onSave returns Promise<void>\n}\n\nexport function LeadEditDialog({ lead, isOpen, onClose, userRole, onSave }: LeadEditDialogProps) {\n  const [isSaving, setIsSaving] = React.useState(false);\n  const { toast } = useToast();\n\n  const handleSave = async (data: Partial<Lead>) => {\n    if (!lead) return;\n    setIsSaving(true);\n    try {\n      await onSave({ ...data, id: lead.id }); // Call the provided onSave function\n      toast({\n        title: \"Lead Updated\",\n        description: `Lead \"${lead.name}\" has been updated successfully.`,\n      });\n      onClose(); // Close dialog on successful save\n    } catch (error) {\n       console.error(\"Failed to save lead:\", error);\n       toast({\n         variant: \"destructive\",\n         title: \"Update Failed\",\n         description: \"Could not update lead details. Please try again.\",\n       });\n      // Keep dialog open on error\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n\n  // Close handler for the dialog primitive\n  const handleOpenChange = (open: boolean) => {\n    if (!open && !isSaving) { // Only close if not saving\n      onClose();\n    }\n    // If saving, the dialog stays open until save completes or fails\n  };\n\n  if (!lead) {\n    return null; // Don't render the dialog if no lead is selected\n  }\n\n  return (\n     <Dialog open={isOpen} onOpenChange={handleOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px] max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Edit Lead: {lead.name}</DialogTitle>\n          <DialogDescription>\n            Modify the lead details below. Fields you can edit depend on your role. Click save when finished.\n          </DialogDescription>\n        </DialogHeader>\n\n        <LeadEditForm\n          lead={lead}\n          userRole={userRole}\n          onSubmit={handleSave}\n          onCancel={onClose} // Pass onClose to the form's cancel button\n          isLoading={isSaving}\n        />\n\n        {/* Footer can be removed if buttons are handled within the form */}\n        {/* <DialogFooter className=\"mt-4\"> */}\n          {/* <Button type=\"button\" variant=\"outline\" onClick={onClose} disabled={isSaving}>Cancel</Button> */}\n          {/* Save button is now part of the LeadEditForm */}\n        {/* </DialogFooter> */}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAUA;AAEA;AAfA;;;;;;AAyBO,SAAS,eAAe,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAuB;IAC7F,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IAC/C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,aAAa,OAAO;QACxB,IAAI,CAAC,MAAM;QACX,YAAY;QACZ,IAAI;YACF,MAAM,OAAO;gBAAE,GAAG,IAAI;gBAAE,IAAI,KAAK,EAAE;YAAC,IAAI,oCAAoC;YAC5E,MAAM;gBACJ,OAAO;gBACP,aAAa,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,gCAAgC,CAAC;YACnE;YACA,WAAW,kCAAkC;QAC/C,EAAE,OAAO,OAAO;YACb,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;QACD,4BAA4B;QAC9B,SAAU;YACR,YAAY;QACd;IACF;IAGA,yCAAyC;IACzC,MAAM,mBAAmB,CAAC;QACxB,IAAI,CAAC,QAAQ,CAAC,UAAU;YACtB;QACF;IACA,iEAAiE;IACnE;IAEA,IAAI,CAAC,MAAM;QACT,OAAO,MAAM,iDAAiD;IAChE;IAEA,qBACG,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBACnC,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;;gCAAC;gCAAY,KAAK,IAAI;;;;;;;sCAClC,8OAAC,kIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAKrB,8OAAC,mJAAA,CAAA,eAAY;oBACX,MAAM;oBACN,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,WAAW;;;;;;;;;;;;;;;;;AAWrB","debugId":null}},
    {"offset": {"line": 6346, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/mock-data.ts"],"sourcesContent":["\nimport type { Lead, CallStatus, CallOutcome, LeadStatus, LeadResult } from '@/types/lead'; // Import new types\nimport type { AttendanceRecord } from '@/types/attendance'; // Import AttendanceRecord type\nimport { format, subDays, addDays, parse, isValid as isValidDate } from 'date-fns';\n\nconst excelData = [\n    { Source: 'GRC-Test', 'Opportunity Id': 'GRC1.00001', 'Client Name': 'Test GRC', 'Mobile Number': '9999999999', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00002', 'Client Name': 'Mr. Shivaji', 'Mobile Number': '9820702092', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00003', 'Client Name': 'Adil Shaikh', 'Mobile Number': '9821112155', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00004', 'Client Name': 'Vinod', 'Mobile Number': '9653160671', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00005', 'Client Name': 'Sawant', 'Mobile Number': '8104436271', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00006', 'Client Name': 'Ms. Deepali Gurav', 'Mobile Number': '9833095556', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00007', 'Client Name': 'Mr. Nilesh Paradkar G', 'Mobile Number': '9920123882', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00008', 'Client Name': 'Vijay', 'Mobile Number': '9969634469', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00009', 'Client Name': 'Mr. Purushottam Barje', 'Mobile Number': '9819242023', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00010', 'Client Name': 'Mr. Amey Phatak', 'Mobile Number': '9819369611', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00011', 'Client Name': 'Mr. Vilas Belanke', 'Mobile Number': '9820821608', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00012', 'Client Name': 'Pradhya Arjun Sarjine', 'Mobile Number': '7738747549', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00013', 'Client Name': 'Nandkumar Kantilal Mayyad', 'Mobile Number': '7678061000', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00014', 'Client Name': 'Siddharth S Bhattacharjee', 'Mobile Number': '9819843764', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00015', 'Client Name': 'Nisar Ahmed Basu', 'Mobile Number': '9322665284', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00016', 'Client Name': 'Rajendra Ravindra Deulkar', 'Mobile Number': '8454880815', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00017', 'Client Name': 'Sagar Shyam Khandpekar', 'Mobile Number': '8600111672', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00018', 'Client Name': 'Shailendra Parshuram Parab', 'Mobile Number': '8652689689', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00019', 'Client Name': 'Jayesh Solanki', 'Mobile Number': '9928011775', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00020', 'Client Name': 'Jayshree Nitnavre', 'Mobile Number': '9920333958', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00021', 'Client Name': 'Abhijeet Arun Hanamshet', 'Mobile Number': '9881741083', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00022', 'Client Name': 'Shatrughan Dwivedi', 'Mobile Number': '9702057682', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00023', 'Client Name': 'Samir Chavan', 'Mobile Number': '9819293057', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00024', 'Client Name': 'Mr Jayant Achrekar', 'Mobile Number': '9820091238', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00025', 'Client Name': 'Amar Soneja', 'Mobile Number': '9822250847', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00026', 'Client Name': 'Mr Ajay', 'Mobile Number': '9846466727', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00027', 'Client Name': 'Vijay', 'Mobile Number': '9867095824', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00028', 'Client Name': 'Anand Ghadigaonkar', 'Mobile Number': '9867439413', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00029', 'Client Name': 'Amar Shirke', 'Mobile Number': '9867938575', 'Calling SM': 'Pooja' },\n    { Source: 'RC - Pune', 'Opportunity Id': 'GRC1.00030', 'Client Name': 'Snehashri Shekhar Wagh', 'Mobile Number': '9967187317', 'Calling SM': 'Pooja' }\n];\n\nconst possibleCallStatuses: CallStatus[] = [\"Connected\", \"Not Connected\", null];\nconst possibleCallOutcomes: CallOutcome[] = [\"Prospect\", \"Call Back\", \"Not Interested\", \"Ringing\", \"Call Disconnected\", \"Won by GRC\", null];\nconst possibleBookedLost: Array<'Booked' | 'Lost' | null> = [\"Booked\", \"Lost\", null];\nconst possibleLocations = [\"Mumbai\", \"Pune\", \"Delhi\", \"Bangalore\", \"Chennai\", \"Hyderabad\", \"Kolkata\", \"Ahmedabad\", \"Surat\", \"Jaipur\"];\nconst possibleRemarks = [\n    \"Interested in 2BHK flat.\", \"Looking for investment property.\", \"Budget around 1 Cr.\",\n    \"Needs property near station.\", \"Follow up next week.\", \"Not answering calls.\",\n    \"Wants ready possession.\", \"Asked for brochure.\", \"Site visit scheduled.\",\n    \"Currently out of station.\", null, \"Decision maker is abroad.\", \"Looking for loan options.\",\n    \"Wife needs to see the property.\", \"Needs more options.\", \"Price slightly high.\"\n];\nconst possibleLeadStatuses: LeadStatus[] = [\"Hot\", \"Warm\", \"Cold\", \"Very Cold\", \"Lost\", \"Booked\", null];\nconst possibleLeadResults: LeadResult[] = [\"VDNB\", \"Visit Proposed\", \"Visit Confirmed\", \"Visit not Done\", \"Booked\", null];\n\n\nconst getRandomElement = <T>(arr: Array<T>): T => {\n    if (arr.length === 0) return null as T; // Handle empty arrays gracefully\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    return arr[randomIndex];\n};\n\nconst getRandomDate = (startOffset: number, endOffset: number): string | null => {\n    const today = new Date();\n    // Ensure startOffset is less than endOffset\n    const start = Math.min(startOffset, endOffset);\n    const end = Math.max(startOffset, endOffset);\n\n    const randomDays = Math.floor(Math.random() * (end - start + 1)) + start;\n    // Randomly return null sometimes\n    if (Math.random() < 0.15) return null; // ~15% chance of being null\n    return format(addDays(today, randomDays), 'yyyy-MM-dd');\n};\n\nconst getRandomPastDate = (daysAgoMax: number): string => {\n    const today = new Date();\n    const randomDaysAgo = Math.floor(Math.random() * daysAgoMax) + 1; // 1 to daysAgoMax\n    return format(subDays(today, randomDaysAgo), 'yyyy-MM-dd');\n};\n\n\nexport const generateMockLeads = (): Lead[] => {\n    return excelData.map((row, index): Lead => {\n        // Use let instead of const for variables that might be reassigned\n        let callDate = getRandomDate(-30, -1); // Call date in the last 30 days or null\n        let callStatus: CallStatus = null;\n        let callOutcome: CallOutcome = null;\n        let callBookedLost: 'Booked' | 'Lost' | null = null;\n        let nadDate: string | null = null;\n        let nadBookedLost: 'Booked' | 'Lost' | null = null;\n\n        // Prospect specific fields\n        let leadStatus: LeadStatus = null;\n        let leadResult: LeadResult = null;\n\n\n        if (callDate) {\n            callStatus = getRandomElement(possibleCallStatuses.filter(s => s!==null)); // If there's a call date, it's likely connected or not\n            if (callStatus === \"Connected\") {\n                callOutcome = getRandomElement(possibleCallOutcomes.filter(o => o !== null && o !== \"Ringing\")); // Connected implies an outcome other than Ringing\n                if (callOutcome === \"Prospect\" || callOutcome === \"Call Back\") {\n                    nadDate = getRandomDate(1, 15); // NAD within next 15 days\n                    if (nadDate && Math.random() < 0.2) { // ~20% chance of NAD being booked/lost\n                        nadBookedLost = getRandomElement(possibleBookedLost.filter(s=>s!==null));\n                    }\n                     // Assign lead status and result if it's a prospect or callback\n                    leadStatus = getRandomElement(possibleLeadStatuses.filter(s => s !== 'Lost' && s !== 'Booked' && s !== null)); // Assign active statuses\n                    if (leadStatus === 'Hot' || leadStatus === 'Warm') {\n                        leadResult = getRandomElement(possibleLeadResults.filter(r => r !== 'Booked' && r !== null)); // Assign active results\n                    } else {\n                        leadResult = getRandomElement([null, \"VDNB\", \"Visit Proposed\"]); // Colder leads less likely to have advanced results\n                    }\n\n                } else if (callOutcome === \"Won by GRC\" || callOutcome === \"Not Interested\") {\n                    callBookedLost = callOutcome === \"Won by GRC\" ? \"Booked\" : \"Lost\";\n                    nadDate = null; // No NAD if won or lost\n                    leadStatus = callOutcome === \"Won by GRC\" ? \"Booked\" : \"Lost\";\n                    leadResult = callOutcome === \"Won by GRC\" ? \"Booked\" : null; // Result is Booked if won\n                }\n            } else { // Not Connected\n                callOutcome = getRandomElement([\"Ringing\", \"Call Disconnected\", null]);\n                if (callOutcome === \"Ringing\" && Math.random() < 0.5) {\n                    nadDate = getRandomDate(1, 5); // Set NAD for ringing sometimes\n                }\n                 // Keep lead status/result null if not connected\n                 leadStatus = null;\n                 leadResult = null;\n            }\n        } else {\n            // No call date yet\n            callStatus = null;\n            callOutcome = null;\n             leadStatus = getRandomElement([null, \"Cold\", \"Very Cold\"]); // New leads are often cold initially\n             leadResult = null;\n            // Maybe set NAD if it's a fresh lead?\n             if (Math.random() < 0.3) {\n                 nadDate = getRandomDate(1, 7); // Schedule NAD for some new leads\n             }\n        }\n\n        // Special handling for the first row to ensure it exists\n        if (index === 0) {\n            callDate = callDate || getRandomPastDate(5); // Ensure first row has a call date\n            callStatus = callStatus || \"Connected\";\n            callOutcome = callOutcome || \"Prospect\";\n            leadStatus = leadStatus || \"Warm\"; // Make first one warm\n            leadResult = leadResult || \"Visit Proposed\";\n            nadDate = nadDate || getRandomDate(1,7);\n        }\n         // Ensure Booked/Lost consistency\n         if (leadStatus === 'Booked') {\n             leadResult = 'Booked';\n             callOutcome = 'Won by GRC'; // Align call outcome\n         } else if (leadStatus === 'Lost') {\n             callOutcome = 'Not Interested'; // Align call outcome\n             leadResult = null;\n         }\n\n        // Generate upload date further in the past\n        const uploadDate = getRandomPastDate(Math.max(30, index + 1)); // Upload date between 30 days ago and further back\n\n\n        return {\n            id: row['Opportunity Id'], // Use Opportunity Id as unique ID\n            name: row['Client Name'],\n            phone: row['Mobile Number'].toString(),\n            source: row.Source,\n            assignedTo: row['Calling SM'],\n            // Optional fields (randomly generated or null)\n            company: Math.random() > 0.7 ? `Company ${index + 1}` : undefined,\n            email: Math.random() > 0.6 ? `${row['Client Name'].toLowerCase().replace(/\\s+/g, '.')}@example.com` : undefined,\n            location: getRandomElement(possibleLocations),\n            remark: getRandomElement(possibleRemarks),\n            callDate: callDate,\n            callStatus: callStatus,\n            callOutcome: callOutcome,\n            callBookedLost: callBookedLost,\n            nadDate: nadDate,\n            nadBookedLost: nadBookedLost,\n            uploadDate: uploadDate, // Use generated past date\n            lastUpdated: callDate ? format(new Date(callDate), \"yyyy-MM-dd'T'HH:mm:ss'Z'\") : format(new Date(uploadDate), \"yyyy-MM-dd'T'HH:mm:ss'Z'\"), // Use call date or upload date as last updated initially\n            // Add new fields\n            leadStatus: leadStatus,\n            leadResult: leadResult,\n        };\n    });\n};\n\n\n// --- Attendance Mock Data ---\n\nlet mockAttendanceRecords: AttendanceRecord[] = [];\nconst employeeIds = [\"pooja\", \"aditya\"]; // List of employee IDs\n\n// Function to generate mock attendance data for the last N days\nconst generateMockAttendance = (days: number) => {\n  const today = new Date();\n  const records: AttendanceRecord[] = [];\n  for (let i = 0; i < days; i++) {\n    const date = subDays(today, i);\n    const dateStr = format(date, 'yyyy-MM-dd');\n\n    // Simulate weekends (no records) or some days off\n    if (date.getDay() === 0 || date.getDay() === 6 || Math.random() < 0.1) {\n      continue; // Skip weekends and random days off\n    }\n\n    for (const empId of employeeIds) {\n       // Simulate varied in/out times\n       const inHour = Math.floor(Math.random() * 2) + 9; // 9 or 10 AM\n       const inMinute = Math.floor(Math.random() * 60);\n       const outHour = Math.floor(Math.random() * 2) + 18; // 6 or 7 PM\n       const outMinute = Math.floor(Math.random() * 60);\n\n        // Sometimes mark as absent (no in/out time) or only in-time\n        let inTime: string | null = `${String(inHour).padStart(2, '0')}:${String(inMinute).padStart(2, '0')}`;\n        let outTime: string | null = `${String(outHour).padStart(2, '0')}:${String(outMinute).padStart(2, '0')}`;\n\n        const attendanceStatus = Math.random();\n        if (attendanceStatus < 0.05) { // 5% chance of absent\n           inTime = null;\n           outTime = null;\n        } else if (attendanceStatus < 0.15) { // 10% chance of only marking IN time (e.g., forgot to mark OUT)\n            outTime = null;\n            // Ensure inTime is not null if outTime is null but not fully absent\n            if (!inTime) {\n                 inTime = `${String(inHour).padStart(2, '0')}:${String(inMinute).padStart(2, '0')}`;\n            }\n        }\n\n\n      records.push({\n        id: `${empId}-${dateStr}`, // Unique ID based on employee and date\n        employeeId: empId,\n        date: dateStr,\n        inTime: inTime,\n        outTime: outTime,\n        lastUpdated: subDays(new Date(), i).toISOString(), // Simulate update time close to the date\n      });\n    }\n  }\n  mockAttendanceRecords = records;\n};\n\n// Generate mock data for the last 60 days on initialization\ngenerateMockAttendance(60);\n\n// Mock function to fetch attendance records for a specific employee\nexport async function fetchEmployeeAttendance(employeeId: string): Promise<AttendanceRecord[]> {\n  console.log(`Fetching attendance for employee: ${employeeId}`);\n  await new Promise(resolve => setTimeout(resolve, 400)); // Simulate network delay\n  return mockAttendanceRecords.filter(record => record.employeeId === employeeId);\n}\n\n// Mock function to fetch all attendance records (for admin)\nexport async function fetchAllAttendance(): Promise<AttendanceRecord[]> {\n  console.log(\"Fetching all attendance records for admin...\");\n  await new Promise(resolve => setTimeout(resolve, 600)); // Simulate network delay\n  return [...mockAttendanceRecords]; // Return a copy\n}\n\n\n// Mock function to save or update an attendance record\nexport async function saveAttendanceRecord(record: Omit<AttendanceRecord, 'id' | 'lastUpdated'>): Promise<{ success: boolean; record?: AttendanceRecord }> {\n   console.log(\"Saving attendance record:\", record);\n   await new Promise(resolve => setTimeout(resolve, 500)); // Simulate network delay\n\n   const recordId = `${record.employeeId}-${record.date}`;\n   const existingIndex = mockAttendanceRecords.findIndex(r => r.id === recordId);\n\n   const updatedRecord: AttendanceRecord = {\n     ...record,\n     id: recordId,\n     lastUpdated: new Date().toISOString(),\n   };\n\n   if (existingIndex !== -1) {\n     // Update existing record\n     mockAttendanceRecords[existingIndex] = updatedRecord;\n   } else {\n     // Add new record\n     mockAttendanceRecords.push(updatedRecord);\n     // Keep the array sorted by date descending (optional)\n     mockAttendanceRecords.sort((a, b) => b.date.localeCompare(a.date));\n   }\n\n   return { success: true, record: updatedRecord };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6857, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/employee/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { AppLayout } from \"@/components/layout/app-layout\";\nimport { LeadDataTable } from \"@/components/leads/lead-data-table\";\nimport type { Lead } from \"@/types/lead\";\nimport { LeadEditDialog } from \"@/components/leads/lead-edit-dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { generateMockLeads } from \"@/lib/mock-data\"; // Import the mock data generator\nimport { Skeleton } from \"@/components/ui/skeleton\"; // Import Skeleton\n\n// Use the generated mock leads based on the Excel sheet\nconst allLeads: Lead[] = generateMockLeads();\n\n// Mock function to fetch leads assigned to the current employee (replace with actual API call)\nasync function fetchEmployeeLeads(employeeId: string): Promise<Lead[]> {\n  console.log(`Fetching leads for employee: ${employeeId}`);\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n\n  // In a real app, fetch from your PHP/MySQL backend API\n  // Example: const response = await fetch(`/api/leads?assignedTo=${employeeId}`);\n  // const data = await response.json(); return data.leads;\n\n  // Return mock data filtered for the employee\n  // Match based on the provided employeeId (e.g., \"pooja\")\n  return allLeads.filter(lead => lead.assignedTo?.toLowerCase() === employeeId.toLowerCase());\n}\n\n// Mock function to update lead (replace with API call)\n// Employees might have a different API endpoint or the backend handles permissions\nasync function updateLeadApiEmployee(updatedData: Partial<Lead>): Promise<{ success: boolean; lead?: Lead }> {\n  console.log(\"Updating lead (employee):\", updatedData);\n  await new Promise(resolve => setTimeout(resolve, 500)); // Simulate delay\n  // In real app: fetch call to employee-specific update endpoint or rely on backend validation\n  if (Math.random() > 0.1) { // Simulate success\n     // Update the lead in our mock data source\n     const leadIndex = allLeads.findIndex(l => l.id === updatedData.id);\n     if (leadIndex !== -1) {\n         allLeads[leadIndex] = { ...allLeads[leadIndex], ...updatedData, lastUpdated: new Date().toISOString() } as Lead;\n     }\n    return { success: true, lead: allLeads[leadIndex] }; // Simulate returning updated data\n  } else {\n    return { success: false };\n  }\n}\n\n\nexport default function EmployeeDashboard() {\n  const [leads, setLeads] = React.useState<Lead[]>([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [editingLead, setEditingLead] = React.useState<Lead | null>(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = React.useState(false);\n  const [employeeId, setEmployeeId] = React.useState<string | null>(null); // State to store employee ID\n  const { toast } = useToast();\n\n  const userRole = \"employee\";\n\n  // Effect to get employee ID from localStorage on mount\n  React.useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setEmployeeId(storedUserId);\n    } else {\n      // Handle case where employee ID is not found (e.g., redirect to login)\n      console.error(\"Employee ID not found in localStorage.\");\n      toast({ variant: \"destructive\", title: \"Authentication Error\", description: \"Could not identify user. Please login again.\" });\n      // Consider redirecting: router.push('/login');\n       setIsLoading(false); // Stop loading if no ID\n    }\n  }, [toast]);\n\n\n  const loadLeads = React.useCallback(async () => { // Memoize loadLeads\n    if (!employeeId) return; // Don't load if no employeeId\n\n    setIsLoading(true);\n      try {\n        const fetchedLeads = await fetchEmployeeLeads(employeeId);\n        setLeads(fetchedLeads);\n      } catch (error) {\n        console.error(\"Failed to fetch employee leads:\", error);\n         toast({ variant: \"destructive\", title: \"Error\", description: \"Could not load your assigned leads.\" });\n      } finally {\n        setIsLoading(false);\n      }\n  }, [employeeId, toast]); // Dependencies\n\n  // Fetch leads when employeeId is set\n  React.useEffect(() => {\n    if (employeeId) {\n      loadLeads();\n    }\n  }, [employeeId, loadLeads]);\n\n\n  // Handler to open the edit dialog\n  const handleEditDialog = (lead: Lead) => {\n    setEditingLead(lead);\n    setIsEditDialogOpen(true);\n  };\n\n    // Handler to close the edit dialog\n  const handleCloseDialog = () => {\n    setIsEditDialogOpen(false);\n    setEditingLead(null); // Clear the editing lead state\n  };\n\n  // Handler for saving updated lead data (used by both Dialog and Inline Edit)\n  const handleSave = async (updatedData: Partial<Lead>): Promise<{ success: boolean }> => {\n     const result = await updateLeadApiEmployee(updatedData);\n     if (result.success && result.lead) {\n       setLeads(prevLeads =>\n         prevLeads.map(l => (l.id === result.lead!.id ? result.lead! : l)) // Use result.lead\n       );\n       // await loadLeads(); // No need to refetch if local update is sufficient\n       return { success: true };\n     } else {\n       return { success: false }; // Let caller handle toast\n     }\n  };\n\n  return (\n    <AppLayout userRole={userRole}>\n       <div className=\"flex justify-between items-center mb-4 sm:mb-6\"> {/* Adjusted margin */}\n         <h1 className=\"text-xl sm:text-2xl font-semibold text-primary\">My Assigned Leads ({employeeId || 'Loading...'})</h1> {/* Adjusted size */}\n         {/* Add any employee-specific buttons or info here if needed */}\n       </div>\n\n      {isLoading ? (\n          // Skeleton Loader for Table (similar to admin)\n          <div className=\"space-y-4\">\n               <div className=\"flex justify-between\">\n                  <Skeleton className=\"h-9 w-1/3\" />\n                  <div className=\"flex gap-2\">\n                      <Skeleton className=\"h-9 w-24\" />\n                      <Skeleton className=\"h-9 w-24\" />\n                  </div>\n              </div>\n              <div className=\"rounded-md border shadow-sm bg-card\">\n                  <Skeleton className=\"h-12 w-full rounded-t-md\" /> {/* Header */}\n                  <div className=\"space-y-2 p-4\"> {/* Rows */}\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                      <Skeleton className=\"h-10 w-full\" />\n                  </div>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                  <Skeleton className=\"h-5 w-1/4\" />\n                   <div className=\"flex gap-2\">\n                       <Skeleton className=\"h-9 w-20\" />\n                       <Skeleton className=\"h-9 w-20\" />\n                   </div>\n               </div>\n          </div>\n      ) : !employeeId ? (\n        <p className=\"text-destructive text-center mt-10\">Could not load leads. User ID not found.</p> // Centered message\n      ): (\n        <LeadDataTable\n          // Columns are determined internally\n          data={leads}\n          onEditDialog={handleEditDialog}\n          onUpdate={handleSave} // Pass the save handler\n          userRole={userRole}\n          // No onDelete passed for employee\n          // No availableEmployees needed for filtering\n        />\n      )}\n\n       {/* Edit Dialog */}\n       {editingLead && (\n          <LeadEditDialog\n            lead={editingLead}\n            isOpen={isEditDialogOpen}\n            onClose={handleCloseDialog}\n            userRole={userRole}\n            onSave={async (data) => {\n                const result = await handleSave(data);\n                 if (!result.success) {\n                     throw new Error(\"API update failed\"); // Propagate error to keep dialog open\n                 }\n            }}\n          />\n        )}\n    </AppLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}